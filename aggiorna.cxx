

#include <stdlib.h>
#include <stdio.h>

#include <string.h>

typedef unsigned short ushort;


int main(int argc,char ** argv){
  short int mask[24][19] = {
    {  1, 449, 513, 594, 640, 641, 642, 643, 757, 832, 833,1024,   0,   0,   0,   0,   0,   0,   0}, //0
    {  1,   2, 262, 263, 317, 640, 641, 642, 833, 960, 961, 962,1024,   0,   0,   0,   0,   0,   0}, //1
    {  1,  76, 257, 261, 268, 449, 451, 467, 640, 832, 833,1024,   0,   0,   0,   0,   0,   0,   0}, //2
    {  1,   2,  56,  62,  91, 370, 625, 639, 640, 641, 832, 833, 879, 884, 893, 896,1024,   0,   0}, //3
    {  1,   7,  32,  34, 175, 449, 465, 640, 832, 833,   0,   0,   0,   0,   0,   0,   0,   0,   0}, //4
    {  1, 309, 343, 640, 641, 745, 746, 747, 830, 832, 833, 874,1024,   0,   0,   0,   0,   0,   0}, //5
    {  1, 571, 600, 612, 640, 641, 832, 833,1024,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0}, //6
    {  1, 433, 640, 768, 832, 833, 945,1024,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0}, //7
    {  1,  66,  67, 291, 307, 341, 343, 345, 347, 377, 529, 640, 641, 809, 832, 833,1024,   0,   0}, //8
    {  1, 640, 641, 642, 661, 662, 679, 713, 714, 793, 836, 938, 980, 992,1024,   0,   0,   0,   0}, //9
    {  1,  45,  57,  99, 100, 129, 257, 449, 577, 583, 640, 641, 833, 889,1024,   0,   0,   0,   0}, //10 
    {  1, 323, 491, 492, 640, 832, 833, 868,1024,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0}, //11 
    {  1,  74,  76, 124, 126, 241, 243, 639, 640, 641, 642, 687, 833,1024,   0,   0,   0,   0,   0}, //12 
    {  1, 299, 355, 514, 640, 641, 642, 643, 644, 692, 694, 752, 833, 928,1021,   0,   0,   0,   0}, //13 
    {  1,   2,  64, 206, 322, 448, 521, 640, 641, 832, 833,1014,1024,   0,   0,   0,   0,   0,   0}, //14 
    {  1,  22, 113, 117, 256, 389, 474, 477, 495, 596, 640, 641, 680, 744, 799, 832, 833, 864,1024}, //15 
    {  1,   2,   3,  13, 360, 362, 513, 640, 832, 833, 834,   0,   0,   0,   0,   0,   0,   0,   0}, //16 
    {  1, 385, 545, 638, 640, 641, 678, 705, 706, 765, 811, 832, 833, 860,1024,   0,   0,   0,   0}, //17 
    { 42,  53, 151, 182, 463, 464, 465, 487, 577, 587, 606, 608, 638, 640,1024,   0,   0,   0,   0}, //18 
    {  1, 175, 640, 641, 642, 768, 832, 833,1024,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0}, //19 
    {  1, 129, 192, 256, 513, 640, 641, 832, 833,1024,   0,   0,   0,   0,   0,   0,   0,   0,   0}, //20
    {  1,  65, 507, 640, 641, 643, 832, 833,1024,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0}, //21
    {  1,  34,  49,  75, 197, 199, 359, 367, 369, 371, 406, 640,   0,   0,   0,   0,   0,   0,   0}, //22
    {  1, 382, 390, 577, 640, 650, 688, 828, 849, 867, 877, 948,1019,1024,   0,   0,   0,   0,   0}  //23
  };


  if(argc!=2){
    printf("Usage: %s [tdrnum]\n",argv[0]);
    exit(2);
  }
  int tdrnum=atoi(argv[1]);
  ushort newstatus[1024];
  memset(newstatus,0,1024*sizeof(newstatus[0]));
  for (int ii=0;ii<19;ii++){
    int mval=mask[tdrnum][ii];
    if(mval!=0) newstatus[mval-1]=32;
  }
//   FILE *in=fopen(argv[1],"r");
//   char name2[100];
//   sprintf(name2,"%s.new",argv[1]);
//   FILE *out=fopen(name2,"w");

  FILE *in=fopen("calib.cal","r");
  char name2[100];
  sprintf(name2,"calload.cal");
  FILE *out=fopen(name2,"w");

  if(!out || !in){
    printf("problems wit files %s %s !\n",argv[1],name2);
    exit(2);
  }
  for (int ii=0;ii<16;ii++){
    int aa;
    float bb,cc;
    fscanf(in,"%d, %f, %f",&aa,&bb,&cc);
    fprintf(out,"%d,   %5.3f,  %5.3f\n",aa,bb,cc);
  }
  for( int ii=0;ii<1024;ii++){
    int aa,bb,cc;
    float dd,ee,ff,gg;
    ushort status;
    
    fscanf(in,"%d %d %d  %f %f %f %f %hd",
	   &aa,&bb,&cc, &dd,&ee,&ff,&gg,&status);
    
    status |= newstatus[ii]; 
    
    fprintf(out,"%4d %2d %2d %5.3f %5.3f %5.3f %5.3f %4d\n",
	    aa,bb,cc, dd,ee,ff,gg,status);
  }

  unsigned short int zz1,zz2,zz3,zz4,zz5,zz6,zz7,zz8;
  fscanf(in,"%hx %hx %hx %hx %hx %hx %hx %hx",
	 &zz1,&zz2,&zz3,&zz4,&zz5,&zz6,&zz7,&zz8);

  fprintf(out,"%04hx %04hx %04hx %04hx %04hx %04hx %04hx %04hx",
	 &zz1,&zz2,&zz3,&zz4,&zz5,&zz6,&zz7,&zz8);
  fclose(in);
  fclose(out);
  return 0;
}
