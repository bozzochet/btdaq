// List with all messages!!!

///////////////
// NewLadder //
///////////////
enum NewLadderTypes{   // NewLadder -> MainFrame
  kC_NEWLADDER=100,       
    kNLTB_OK=101,
    kNLTB_HYB_OK=102,
    kNLTB_CANCEL=103,
  kNLCB_VOLTAGE=105,
  kNLCB_SENSORS=106,
  kNLCB_ASSEMBLY=107,
  kNLCB_LAYER=108,
  kNLTE_SERIAL=109,
  kNLCB_SorK=110,
  kNLTE_BATCH=111,
  kNLTE_HYB_SERIAL=112
};

enum TDRSignalTypes{   // TDRSignalHandler -> MainFrame
  kC_TDRSIGNAL=120,
};

enum SetParCalTypes{
  kC_SETCALPAR=130,
    kSCPTB_OK=131,
    kSCPTB_SAVE=132,
    kSCPTB_CANCEL=133,
};

enum SetGainCalTypes{
  kC_SETGAINPAR=140,
    kSGPTB_OK=141,
    kSGPTB_SAVE=142,
    kSGPTB_CANCEL=143,
};

enum SetShapingTimeTypes{
  kC_SETSHAPINGTIME=150,
    kSSTTB_OK=151,
    kSSTTB_SAVE=152,
    kSSTTB_CANCEL=153,
};

enum SetLeakTempTypes{
  kC_SETLEAKTEMP=160,
    kSLTTB_OK=161,
    kSLTTB_SAVE=162,
    kSLTTB_CANCEL=163,
};

enum SelecLadderTypes{
  kC_SELECTLADDER=401,
    kSLTB_TEST=402,
    kSLTB_AMS=403,
    kSLTB_HYBRID=404,
    kSLTB_LAST=405,
};

enum ShowFileTypes{
  kC_SHOWFILE=501,
    kSFTB_DISMISS=502,
};

enum Printer{
  kC_SETPRINTER=601,
    kSPr_OK=602,
    kSPr_CANCEL=603,
};

enum AmsWireTypes{
  kC_AMSWIREWINDOW=801,
  kSAMSWTB_OK=802,
  kSAMSWTB_CANCEL=803,
  kSAMSWCB_HWTYPE=804,
  kSAMSWCB_HWPORT=805,
  kSAMSWTE_SUBADD=806,
};


///////////////
// MainFrame //
///////////////
enum  MenuTypes {       // MainFrame Menu Items
  kM_FILE_NEW_LADDER,
  kM_FILE_DIRECTORIES,
  kM_FILE_SHOWRUNSUMMARY,
  kM_FILE_SETSHAPINGTIME,
  kM_FILE_RESETHW,
  kM_FILE_PREFERENCES,
  kM_FILE_PRINT,
  kM_FILE_EXIT,
  kM_STATION_GENEVA,
  kM_STATION_PERUGIA,
  kM_STATION_GYA,
  kM_STATION_PREVESSIN,
  kM_STATION_EDUARDO,
  kM_STATION_GIOVANNI,
  kM_CAL_SET_PARAMETERS,
  kM_CAL_SET_DEFAULT,
  kM_CAL_DYNAMIC,
  kM_CAL_PASS_ALL,
  kM_CAL_PASS_0,
  kM_CAL_PASS_1,
  kM_CAL_PASS_2,
  kM_CAL_PASS_3,
  kM_CAL_PASS_4,
  kM_CAL_SUMMARY,
  kM_GAIN_SET_PARAMETERS,
  kM_GAIN_START,
  kM_QUAL_TEST_A,
  kM_QUAL_TEST_B,
  kM_QUAL_TEST_C,
  kM_QUAL_TEST_D,
  kM_QUAL_TEST_E,
  kM_QUAL_TEST_F,
  kM_QUAL_TEST_G,
  kM_QUAL_TEST_H,
  kM_QUAL_TEST_I,
  kM_QUAL_TEST_M,
  kM_QUAL_TEST_P,
  kM_QUAL_TEST_V,
  kM_QUAL_TEST_W,
  kM_AMSWIRE_STATUS,
  kM_HELP_AMS,
  kM_HELP_SYSTEM,
  kM_HELP_ABOUT
};
enum  ComboBoxTypes {   // MainFrame ComboBox
  kCB_LOG_STATUS,
  kCB_DATA_MODE,
  kCB_TRIGGER,
  kCB_SOURCE,
  kCB_HISTOS_HISTOGRAM,
  kCB_HISTOS_VA,
  kCB_HISTOS_CHANNEL,
  kCB_HISTOS_FIRST_VA,
  kCB_HISTOS_LAST_VA,
  kCB_HISTOS_FIRST_CHANNEL,
  kCB_HISTOS_LAST_CHANNEL,
  kCB_HISTOS_REMAIN,
  kCB_XTANT,
};

enum CheckButtonTypes {
  kCHB_SHOW_BAD,
  kCHB_PWG_MODE,
  kCHB_RECORD_GIF,
  kCHB_DYN_PED,
};

enum TextButtonTypes {  // MainFrame TextButtons
  kTB_READ_TEMP,
  kTB_ENTER_TEMP_LEAK,
  kTB_ANALOG_S1,
  kTB_ANALOG_S2,
  kTB_ANALOG_K,
  kTB_START_RUN,
  kTB_STOP_RUN,
  kTB_CHECK_ALL,
  kTB_CHECK_CONTROL,
  kTB_CHECK_DSP,
  kTB_CHECK_RUN,
  kTB_CHECK_LOG,
  kTB_HISTOS_MINX_MUL2,
  kTB_HISTOS_MINX_DIV2,
  kTB_HISTOS_MAXX_MUL2,
  kTB_HISTOS_MAXX_DIV2,
  kTB_HISTOS_MINY_MUL2,
  kTB_HISTOS_MINY_DIV2,
  kTB_HISTOS_MAXY_MUL2,
  kTB_HISTOS_MAXY_DIV2,

  kTB_TDRSEL_0,
  kTB_TDRSEL_1,
  kTB_TDRSEL_2,
  kTB_TDRSEL_3,
  kTB_TDRSEL_4,
  kTB_TDRSEL_5,
  kTB_TDRSEL_6,
  kTB_TDRSEL_7,
  kTB_TDRSEL_8,
  kTB_TDRSEL_9,
  kTB_TDRSEL_10,
  kTB_TDRSEL_11,
  kTB_TDRSEL_12,
  kTB_TDRSEL_13,
  kTB_TDRSEL_14,
  kTB_TDRSEL_15,
  kTB_TDRSEL_16,
  kTB_TDRSEL_17,
  kTB_TDRSEL_18,
  kTB_TDRSEL_19,
  kTB_TDRSEL_20,
  kTB_TDRSEL_21,
  kTB_TDRSEL_22,
  kTB_TDRSEL_23
};

enum TextEntryTypes {  // MainFrame TextButtons
  kTE_HISTOS_DACCHAN,
  kTE_HISTOS_DACVAL,
  kTE_HISTOS_MINX,
  kTE_HISTOS_MAXX,
  kTE_HISTOS_MINY,
  kTE_HISTOS_MAXY,
  kTE_HISTOS_TDR,
  kTE_TDRDSP_CODE,
  kTE_AMSWSL
};


enum FileDialogTypes { //
  kFD_SOURCEFILE,
  kFD_X5FILE,
};
