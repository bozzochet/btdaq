<!DOCTYPE UI><UI version="3.3" stdsetdef="1">
<class>ClRDisplay</class>
<widget class="QWidget">
    <property name="name">
        <cstring>ClRDisplay</cstring>
    </property>
    <property name="geometry">
        <rect>
            <x>0</x>
            <y>0</y>
            <width>627</width>
            <height>614</height>
        </rect>
    </property>
    <property name="caption">
        <string>Raw Cluster Display</string>
    </property>
    <vbox>
        <property name="name">
            <cstring>unnamed</cstring>
        </property>
        <widget class="QGroupBox">
            <property name="name">
                <cstring>groupBox2</cstring>
            </property>
            <property name="minimumSize">
                <size>
                    <width>0</width>
                    <height>180</height>
                </size>
            </property>
            <property name="maximumSize">
                <size>
                    <width>32767</width>
                    <height>180</height>
                </size>
            </property>
            <property name="title">
                <string></string>
            </property>
            <vbox>
                <property name="name">
                    <cstring>unnamed</cstring>
                </property>
                <widget class="QLayoutWidget">
                    <property name="name">
                        <cstring>layout17</cstring>
                    </property>
                    <hbox>
                        <property name="name">
                            <cstring>unnamed</cstring>
                        </property>
                        <widget class="QSpinBox">
                            <property name="name">
                                <cstring>sbRClS</cstring>
                            </property>
                            <property name="minimumSize">
                                <size>
                                    <width>100</width>
                                    <height>0</height>
                                </size>
                            </property>
                            <property name="maximumSize">
                                <size>
                                    <width>100</width>
                                    <height>32767</height>
                                </size>
                            </property>
                            <property name="maxValue">
                                <number>999</number>
                            </property>
                        </widget>
                        <widget class="QPushButton">
                            <property name="name">
                                <cstring>pbRDrawS</cstring>
                            </property>
                            <property name="sizePolicy">
                                <sizepolicy>
                                    <hsizetype>5</hsizetype>
                                    <vsizetype>0</vsizetype>
                                    <horstretch>0</horstretch>
                                    <verstretch>0</verstretch>
                                </sizepolicy>
                            </property>
                            <property name="minimumSize">
                                <size>
                                    <width>100</width>
                                    <height>0</height>
                                </size>
                            </property>
                            <property name="maximumSize">
                                <size>
                                    <width>100</width>
                                    <height>32767</height>
                                </size>
                            </property>
                            <property name="text">
                                <string>Draw </string>
                            </property>
                        </widget>
                        <spacer>
                            <property name="name">
                                <cstring>spacer1</cstring>
                            </property>
                            <property name="orientation">
                                <enum>Horizontal</enum>
                            </property>
                            <property name="sizeType">
                                <enum>Expanding</enum>
                            </property>
                            <property name="sizeHint">
                                <size>
                                    <width>372</width>
                                    <height>20</height>
                                </size>
                            </property>
                        </spacer>
                    </hbox>
                </widget>
                <widget class="QTextEdit">
                    <property name="name">
                        <cstring>teRSOUT</cstring>
                    </property>
                    <property name="sizePolicy">
                        <sizepolicy>
                            <hsizetype>7</hsizetype>
                            <vsizetype>5</vsizetype>
                            <horstretch>0</horstretch>
                            <verstretch>0</verstretch>
                        </sizepolicy>
                    </property>
                    <property name="minimumSize">
                        <size>
                            <width>0</width>
                            <height>70</height>
                        </size>
                    </property>
                    <property name="maximumSize">
                        <size>
                            <width>32767</width>
                            <height>150</height>
                        </size>
                    </property>
                    <property name="textFormat">
                        <enum>AutoText</enum>
                    </property>
                </widget>
            </vbox>
        </widget>
        <widget class="QFrame">
            <property name="name">
                <cstring>frame7</cstring>
            </property>
            <property name="minimumSize">
                <size>
                    <width>300</width>
                    <height>400</height>
                </size>
            </property>
            <property name="frameShape">
                <enum>Box</enum>
            </property>
            <property name="frameShadow">
                <enum>Raised</enum>
            </property>
            <property name="lineWidth">
                <number>2</number>
            </property>
            <vbox>
                <property name="name">
                    <cstring>unnamed</cstring>
                </property>
                <widget class="TQRootCanvas">
                    <property name="name">
                        <cstring>CanvasRS</cstring>
                    </property>
                </widget>
            </vbox>
        </widget>
    </vbox>
</widget>
<customwidgets>
    <customwidget>
        <class>TQRootCanvas</class>
        <header location="global">TQRootCanvas.h</header>
        <sizehint>
            <width>-1</width>
            <height>-1</height>
        </sizehint>
        <container>0</container>
        <sizepolicy>
            <hordata>5</hordata>
            <verdata>5</verdata>
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
        </sizepolicy>
        <pixmap>image0</pixmap>
        <signal>destroyed()</signal>
        <signal>destroyed(QObject*)</signal>
        <signal>SelectedPadChanged(TPad*)</signal>
        <slot access="public" specifier="">deleteLater()</slot>
        <slot access="public" specifier="">setEnabled(bool)</slot>
        <slot access="public" specifier="">setDisabled(bool)</slot>
        <slot access="public" specifier="">setCaption(const QString&amp;)</slot>
        <slot access="public" specifier="">setIcon(const QPixmap&amp;)</slot>
        <slot access="public" specifier="">setIconText(const QString&amp;)</slot>
        <slot access="public" specifier="">setMouseTracking(bool)</slot>
        <slot access="public" specifier="">setFocus()</slot>
        <slot access="public" specifier="">clearFocus()</slot>
        <slot access="public" specifier="">setUpdatesEnabled(bool)</slot>
        <slot access="public" specifier="">update()</slot>
        <slot access="public" specifier="">update(int,int,int,int)</slot>
        <slot access="public" specifier="">update(const QRect&amp;)</slot>
        <slot access="public" specifier="">repaint()</slot>
        <slot access="public" specifier="">repaint(bool)</slot>
        <slot access="public" specifier="">repaint(int,int,int,int)</slot>
        <slot access="public" specifier="">repaint(int,int,int,int,bool)</slot>
        <slot access="public" specifier="">repaint(const QRect&amp;)</slot>
        <slot access="public" specifier="">repaint(const QRect&amp;,bool)</slot>
        <slot access="public" specifier="">repaint(const QRegion&amp;)</slot>
        <slot access="public" specifier="">repaint(const QRegion&amp;,bool)</slot>
        <slot access="public" specifier="">show()</slot>
        <slot access="public" specifier="">hide()</slot>
        <slot access="public" specifier="">setShown(bool)</slot>
        <slot access="public" specifier="">setHidden(bool)</slot>
        <slot access="public" specifier="">iconify()</slot>
        <slot access="public" specifier="">showMinimized()</slot>
        <slot access="public" specifier="">showMaximized()</slot>
        <slot access="public" specifier="">showFullScreen()</slot>
        <slot access="public" specifier="">showNormal()</slot>
        <slot access="public" specifier="">polish()</slot>
        <slot access="public" specifier="">constPolish()</slot>
        <slot access="public" specifier="">close()</slot>
        <slot access="public" specifier="">raise()</slot>
        <slot access="public" specifier="">lower()</slot>
        <slot access="public" specifier="">stackUnder(QWidget*)</slot>
        <slot access="public" specifier="">move(int,int)</slot>
        <slot access="public" specifier="">move(const QPoint&amp;)</slot>
        <slot access="public" specifier="">resize(int,int)</slot>
        <slot access="public" specifier="">resize(const QSize&amp;)</slot>
        <slot access="public" specifier="">setGeometry(int,int,int,int)</slot>
        <slot access="public" specifier="">setGeometry(const QRect&amp;)</slot>
        <slot access="public" specifier="">adjustSize()</slot>
        <slot access="public" specifier="">cd()</slot>
        <slot access="public" specifier="">cd(Int_t)</slot>
        <slot access="public" specifier="">Browse(TBrowser*)</slot>
        <slot access="public" specifier="">Clear()</slot>
        <slot access="public" specifier="">Clear(Option_t*)</slot>
        <slot access="public" specifier="">Close()</slot>
        <slot access="public" specifier="">Close(Option_t*)</slot>
        <slot access="public" specifier="">Draw()</slot>
        <slot access="public" specifier="">Draw(Option_t*)</slot>
        <slot access="public" specifier="">DrawClone()</slot>
        <slot access="public" specifier="">DrawClone(Option_t*)</slot>
        <slot access="public" specifier="">DrawClonePad()</slot>
        <slot access="public" specifier="">EditorBar()</slot>
        <slot access="public" specifier="">EnterLeave(TPad*,TObject*)</slot>
        <slot access="public" specifier="">FeedbackMode(Bool_t)</slot>
        <slot access="public" specifier="">Flush()</slot>
        <slot access="public" specifier="">UseCurrentStyle()</slot>
        <slot access="public" specifier="">ForceUpdate()</slot>
        <slot access="public" specifier="">GetDISPLAY()</slot>
        <slot access="public" specifier="">GetContextMenu()</slot>
        <slot access="public" specifier="">GetDoubleBuffer()</slot>
        <slot access="public" specifier="">GetEvent()</slot>
        <slot access="public" specifier="">GetEventX()</slot>
        <slot access="public" specifier="">GetEventY()</slot>
        <slot access="public" specifier="">GetHighLightColor()</slot>
        <slot access="public" specifier="">GetPadSave()</slot>
        <slot access="public" specifier="">GetSelected()</slot>
        <slot access="public" specifier="">GetSelectedOpt()</slot>
        <slot access="public" specifier="">GetSelectedPad()</slot>
        <slot access="public" specifier="">GetShowEventStatus()</slot>
        <slot access="public" specifier="">GetAutoExec()</slot>
        <slot access="public" specifier="">GetXsizeUser()</slot>
        <slot access="public" specifier="">GetYsizeUser()</slot>
        <slot access="public" specifier="">GetXsizeReal()</slot>
        <slot access="public" specifier="">GetYsizeReal()</slot>
        <slot access="public" specifier="">GetCanvasID()</slot>
        <slot access="public" specifier="">GetWindowTopX()</slot>
        <slot access="public" specifier="">GetWindowTopY()</slot>
        <slot access="public" specifier="">GetWindowWidth()</slot>
        <slot access="public" specifier="">GetWindowHeight()</slot>
        <slot access="public" specifier="">GetWw()</slot>
        <slot access="public" specifier="">GetWh()</slot>
        <slot access="public" specifier="">GetCanvasPar(Int_t&amp;,Int_t&amp;,UInt_t&amp;,UInt_t&amp;)</slot>
        <slot access="public" specifier="">HandleInput(EEventType,Int_t,Int_t)</slot>
        <slot access="public" specifier="">HasMenuBar()</slot>
        <slot access="public" specifier="">Iconify()</slot>
        <slot access="public" specifier="">IsBatch()</slot>
        <slot access="public" specifier="">IsRetained()</slot>
        <slot access="public" specifier="">ls()</slot>
        <slot access="public" specifier="">ls(Option_t*)</slot>
        <slot access="public" specifier="">MoveOpaque()</slot>
        <slot access="public" specifier="">MoveOpaque(Int_t)</slot>
        <slot access="public" specifier="">OpaqueMoving()</slot>
        <slot access="public" specifier="">OpaqueResizing()</slot>
        <slot access="public" specifier="">Paint()</slot>
        <slot access="public" specifier="">Paint(Option_t*)</slot>
        <slot access="public" specifier="">Pick(Int_t,Int_t,TObjLink*&amp;)</slot>
        <slot access="public" specifier="">Pick(Int_t,Int_t,TObject*)</slot>
        <slot access="public" specifier="">Resize()</slot>
        <slot access="public" specifier="">Resize(Option_t*)</slot>
        <slot access="public" specifier="">ResizeOpaque()</slot>
        <slot access="public" specifier="">ResizeOpaque(Int_t)</slot>
        <slot access="public" specifier="">SaveSource()</slot>
        <slot access="public" specifier="">SaveSource(const char*)</slot>
        <slot access="public" specifier="">SaveSource(const char*,Option_t*)</slot>
        <slot access="public" specifier="">SetCursor(ECursor)</slot>
        <slot access="public" specifier="">SetDoubleBuffer()</slot>
        <slot access="public" specifier="">SetDoubleBuffer(Int_t)</slot>
        <slot access="public" specifier="">SetWindowPosition(Int_t,Int_t)</slot>
        <slot access="public" specifier="">SetWindowSize(UInt_t,UInt_t)</slot>
        <slot access="public" specifier="">SetCanvasSize(UInt_t,UInt_t)</slot>
        <slot access="public" specifier="">SetHighLightColor(Color_t)</slot>
        <slot access="public" specifier="">SetSelected(TObject*)</slot>
        <slot access="public" specifier="">SetSelectedPad(TPad*)</slot>
        <slot access="public" specifier="">Show()</slot>
        <slot access="public" specifier="">Size()</slot>
        <slot access="public" specifier="">Size(Float_t)</slot>
        <slot access="public" specifier="">Size(Float_t,Float_t)</slot>
        <slot access="public" specifier="">SetBatch()</slot>
        <slot access="public" specifier="">SetBatch(Bool_t)</slot>
        <slot access="public" specifier="">SetRetained()</slot>
        <slot access="public" specifier="">SetRetained(Bool_t)</slot>
        <slot access="public" specifier="">SetTitle()</slot>
        <slot access="public" specifier="">SetTitle(const char*)</slot>
        <slot access="public" specifier="">ToggleEventStatus()</slot>
        <slot access="public" specifier="">ToggleAutoExec()</slot>
        <slot access="public" specifier="">Update()</slot>
        <slot access="public" specifier="">NeedsResize()</slot>
        <slot access="public" specifier="">SetNeedsResize(Bool_t)</slot>
        <property type="CString">name</property>
        <property type="Bool">enabled</property>
        <property type="Rect">geometry</property>
        <property type="SizePolicy">sizePolicy</property>
        <property type="Size">minimumSize</property>
        <property type="Size">maximumSize</property>
        <property type="Size">sizeIncrement</property>
        <property type="Size">baseSize</property>
        <property type="Color">paletteForegroundColor</property>
        <property type="Color">paletteBackgroundColor</property>
        <property type="Pixmap">paletteBackgroundPixmap</property>
        <property type="Palette">palette</property>
        <property type="BackgroundOrigin">backgroundOrigin</property>
        <property type="Font">font</property>
        <property type="Cursor">cursor</property>
        <property type="String">caption</property>
        <property type="Pixmap">icon</property>
        <property type="String">iconText</property>
        <property type="Bool">mouseTracking</property>
        <property type="FocusPolicy">focusPolicy</property>
        <property type="Bool">acceptDrops</property>
    </customwidget>
</customwidgets>
<images>
    <image name="image0">
        <data format="XBM.GZ" length="79">789c534e494dcbcc4b554829cdcdad8c2fcf4c29c95030e0524611cd48cd4ccf28010a1797249664262b2467241641a592324b8aa363156c15aab914146aadb90067111b1f</data>
    </image>
</images>
<connections>
    <connection>
        <sender>pbRDrawS</sender>
        <signal>clicked()</signal>
        <receiver>ClRDisplay</receiver>
        <slot>UpdateS()</slot>
    </connection>
    <connection>
        <sender>sbRClS</sender>
        <signal>valueChanged(int)</signal>
        <receiver>ClRDisplay</receiver>
        <slot>UpdateS()</slot>
    </connection>
</connections>
<includes>
    <include location="local" impldecl="in declaration">TH1F.h</include>
    <include location="local" impldecl="in declaration">Event.h</include>
    <include location="local" impldecl="in implementation">clrdisplay.ui.h</include>
</includes>
<variables>
    <variable access="public">AMSTrRawCluster* cls;</variable>
    <variable access="public">TH1F* Ssig;</variable>
    <variable access="public">TH1F* Snoise;</variable>
    <variable access="public">TH1F* Sstat;</variable>
</variables>
<slots>
    <slot>UpdateS()</slot>
</slots>
<functions>
    <function>init()</function>
</functions>
<pixmapinproject/>
<layoutdefaults spacing="6" margin="11"/>
<includehints>
    <includehint>TQRootCanvas.h</includehint>
</includehints>
</UI>
