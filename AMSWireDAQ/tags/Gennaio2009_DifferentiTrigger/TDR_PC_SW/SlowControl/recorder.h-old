// file recorder.h
//
// see file recorder.c
//
// Everything stolen from Jinghui Zhang and reworked
//
// A.Lebedev, Aug-2007...
//

//~----------------------------------------------------------------------------

#ifndef _RECORDER_H
#define _RECORDER_H

//~----------------------------------------------------------------------------

#include "padlib.h"
/*
#include "mylib.h"
#include "abi.h"
#include "frm.h"
#include "apid.h"
*/

//~----------------------------------------------------------------------------

#define RECORD_TIMER_START 0
#define RECORD_TIMER_STOP  1

typedef struct MyFile {
  char GrandFatherDir[100];
  int FileNo;
  int DirNo;
  volatile int FileFd;
  int FileLen;
  int DirLen;
  int FileInterval;
  int TimerOn;
} MyFile, *pMyFile;

//~----------------------------------------------------------------------------

bool RecordTimer(MyFile *File, int Flag);
bool RecordFrame(pMyFile File, int8 *Frame, int RecordSize);
bool RecordAMSBlock(pMyFile File, pAMSBlock Lebedev, int16 APID, int FrameSize);

int CheckDirIni(const char *Dir);
int CheckDir(char *Dir, int Depth, char*DirEntries, int MaxDepth);
int LastFileNoInDir(char *DirPath, int Length);
void Timer(void *arg);

//~============================================================================

#endif  //_RECORDER_H



