#!/bin/bash
# Sample init script for the a driver module <rubini@linux.it>
# adapted by Peter Dennett for pmchrdl
# chkconfig: 35 97 98
# description: AMS02 PMCHRDL

DEVICE="amswire"
SECTION="ams02"

# The list of filenames and minor numbers: $PREFIX is prefixed to all names
PREFIX="amswire"

INSMOD=/sbin/insmod; # use /sbin/modprobe if you prefer

function device_specific_post_load () {
    true; # fill at will
}
function device_specific_pre_unload () {
    true; # fill at will
}

# Everything below this line should work unchanged for any char device.
# Obviously, however, no options on the command line: either in
# /etc/${DEVICE}.conf or /etc/modules.conf (if modprobe is used)

# Optional configuration file: format is
#    owner  <ownername>
#    group  <groupname>
#    mode   <modename>
#    options <insmod options>
CFG=/etc/${DEVICE}.conf

# kernel version, used to look for modules
KERNEL=`uname -r`

#FIXME: it looks like there is no misc section. Where should it be?
MODDIR="/lib/modules/${KERNEL}/kernel/drivers/${SECTION}"
if [ ! -d $MODDIR ]; then MODDIR="/lib/modules/${KERNEL}/${SECTION}"; fi

# Root or die
if [ "$(id -u)" != "0" ]
then
    echo "You must be root to load or unload kernel modules"
    exit 1
fi

# Read configuration file
if [ -r $CFG ]; then
    OWNER=`awk "\\$1==\"owner\" {print \\$2}" $CFG`
    GROUP=`awk "\\$1==\"group\" {print \\$2}" $CFG`
    MODE=`awk "\\$1==\"mode\" {print \\$2}" $CFG`
    # The options string may include extra blanks or only blanks
    OPTIONS=`sed -n '/^options / s/options //p' $CFG`
fi


# Create device files
function create_files () {
    cd /dev
    local devlist=""
    local file
    file="${DEVICE}"
    mknod $file c $MAJOR 0
    devlist="$devlist $file"

    chmod a+rw  $devlist

    if [ -n "$OWNER" ]; then chown $OWNER $devlist; fi
    if [ -n "$GROUP" ]; then chgrp $GROUP $devlist; fi
    if [ -n "$MODE"  ]; then chmod $MODE  $devlist; fi
}

# Remove device files
function remove_files () {
    cd /dev
    local devlist=""
    local file
    file="${DEVICE}"
    devlist="$devlist $file"
    rm -f $devlist
}

# Load and create files
function load_device () {
    if [ -f $MODDIR/$DEVICE.ko ]; then
        devpath=$MODDIR/$DEVICE.ko
    elif [ -f ./$DEVICE.ko ]; then
        devpath=./$DEVICE.ko
    else
        devpath=$DEVICE.ko; # let insmod/modprobe guess
    fi

    if [ "$devpath" != "$DEVICE" ]; then
        echo " (loading file $devpath)"
    fi

    if $INSMOD -f $devpath $OPTIONS; then
        MAJOR=`awk "\\$2==\"$DEVICE\" {print \\$1}" /proc/devices`
        remove_files
        create_files
        device_specific_post_load
    else
        echo "  FAILED!"
    fi
}

# Unload and remove files
function unload_device () {
    device_specific_pre_unload
    /sbin/rmmod $DEVICE > /dev/null 2>&1
    remove_files
}


case "$1" in
  start)
     echo "Loading $DEVICE ..."
     load_device
     ;;
  stop)
     echo "Unloading $DEVICE ..."
     unload_device
     ;;
  force-reload|restart)
     echo "Reloading $DEVICE ..."
     unload_device
     load_device
     ;;
  *)
     echo "Usage: $0 {start|stop|restart|force-reload}"
     exit 1
esac

exit 0
