#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>

#include "constants.h"

using namespace std;

// ==========================================
// ========== File FUNCTIONS ================
// ==========================================

int is_regular_file(const char *path)
{
	struct stat path_stat;
	stat(path, &path_stat);
	return S_ISREG(path_stat.st_mode);
}

int is_directory(const char *path)
{
	struct stat path_stat;
	stat(path, &path_stat);
	return S_ISDIR(path_stat.st_mode);
}

int is_root_file(const char *str, const char *suffix=".root")
{
	if (!str || !suffix)
		return 0;
	size_t lenstr = strlen(str);
	size_t lensuffix = strlen(suffix);
	if (lensuffix >  lenstr)
		return 0;
	return !strncmp(str + lenstr - lensuffix, suffix, lensuffix);
}

int is_selection_file(const char *str, const char *prefix="")
{
        if (!str || !prefix)
                return 0;
        size_t lenstr = strlen(str);
        size_t lenprefix = strlen(prefix);
        if (lenprefix >  lenstr)
                return 0;
        return !strncmp(str, prefix, lenprefix);
}

int get_files_in_folder(const string input, std::vector <std::string> *output, const char *selection="")
{
	if(!is_directory(input.c_str()))
		return -1;

	DIR *dir;
	struct dirent *ent;
	int ifile=0;
	if ((dir = opendir (input.c_str())) != NULL) {
		/* print all the files and directories within directory */
		while ((ent = readdir (dir)) != NULL) {
			if (!strncmp(ent->d_name, ".", strlen(ent->d_name)) ||
					!strncmp(ent->d_name, "..", strlen(ent->d_name)))
				continue;
			if ( !is_root_file(ent->d_name) )
				continue;
			if (strncmp(selection, "", strlen(selection))!=0) {
				if ( !is_selection_file(ent->d_name, selection) ) {
					continue;
				}
			}
			output->push_back(Form("%s/%s", input.c_str(), ent->d_name));
			++ifile;
		}
		closedir (dir);
		sort( output->begin(), output->end() );
	} else {
		/* could not open directory */
		perror ("No Directory");
		return EXIT_FAILURE;
	}

	cout << "File to be processed :" << endl;
	for(unsigned int isize=0; isize<output->size(); ++isize)
		cout << output->at(isize) << endl;

	return ifile;
}

// ==========================================
// ========== MAPPING FUNCTIONS =============
// ==========================================

bool Chip2Cube(int casis, int casisChannel, int &row, int &col, int &layer, int &sensor) {

	if( casis <0 || casis>=NCASISCHIPS) return false;
	if( casisChannel<0 || casisChannel>=NCASISCHANNELS)return false;

	//initilization
	row=-1;
	col=-1;
	layer=-1;
	sensor=-1;

	static const int layerMap[NCASISCHIPS][NCASISCHANNELS] = {
			//{discon,CN_A,-------LargeA------,holeAx2,------SmallA-------,holeB,-----SmallB------,CN_B,------LargeB------,holeB,discon}
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0,  0, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1, -1},  // HIDRA 0 (A0)
			{ -1, -1,  2,  2,  2,  2,  2, -1, -1,  2,  2,  2,  2,  2, -1,  3,  3,  3,  3,  3, -1,  3,  3,  3,  3,  3, -1, -1},  // HIDRA 1 (B0)
			{ -1, -1,  4,  4,  4,  4,  4, -1, -1,  4,  4,  4,  4,  4, -1,  5,  5,  5,  5,  5, -1,  5,  5,  5,  5,  5, -1, -1},  // HIDRA 2 (C0)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0,  0, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1, -1},  // HIDRA 3 (A1)
			{ -1, -1,  2,  2,  2,  2,  2, -1, -1,  2,  2,  2,  2,  2, -1,  3,  3,  3,  3,  3, -1,  3,  3,  3,  3,  3, -1, -1},  // HIDRA 4 (B1)
			{ -1, -1,  4,  4,  4,  4,  4, -1, -1,  4,  4,  4,  4,  4, -1,  5,  5,  5,  5,  5, -1,  5,  5,  5,  5,  5, -1, -1},  // HIDRA 5 (C1)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0,  0, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1, -1},  // HIDRA 6 (A2)
			{ -1, -1,  2,  2,  2,  2,  2, -1, -1,  2,  2,  2,  2,  2, -1,  3,  3,  3,  3,  3, -1,  3,  3,  3,  3,  3, -1, -1},  // HIDRA 7 (B2)
			{ -1, -1,  4,  4,  4,  4,  4, -1, -1,  4,  4,  4,  4,  4, -1,  5,  5,  5,  5,  5, -1,  5,  5,  5,  5,  5, -1, -1},  // HIDRA 8 (C2)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0,  0, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1, -1},  // HIDRA 9 (A3)
			{ -1, -1,  2,  2,  2,  2,  2, -1, -1,  2,  2,  2,  2,  2, -1,  3,  3,  3,  3,  3, -1,  3,  3,  3,  3,  3, -1, -1},  // HIDRA 10 (B3)
			{ -1, -1,  4,  4,  4,  4,  4, -1, -1,  4,  4,  4,  4,  4, -1,  5,  5,  5,  5,  5, -1,  5,  5,  5,  5,  5, -1, -1},  // HIDRA 11 (C3)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0,  0, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1, -1},  // HIDRA 12 (A4)
			{ -1, -1,  2,  2,  2,  2,  2, -1, -1,  2,  2,  2,  2,  2, -1,  3,  3,  3,  3,  3, -1,  3,  3,  3,  3,  3, -1, -1},  // HIDRA 13 (B4)
			{ -1, -1,  4,  4,  4,  4,  4, -1, -1,  4,  4,  4,  4,  4, -1,  5,  5,  5,  5,  5, -1,  5,  5,  5,  5,  5, -1, -1},  // HIDRA 14 (C4)
			// Board 6: the Board number is different then the PM
			{ -1, -1, 12, 12, 12, 12, 12, -1, -1, 12, 12, 12, 12, 12, -1, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, -1, -1},  // HIDRA 15 (A5)
			{ -1, -1, 14, 14, 14, 14, 14, -1, -1, 14, 14, 14, 14, 14, -1, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, -1, -1},  // HIDRA 16 (B5)
			{ -1, -1, 16, 16, 16, 16, 16, -1, -1, 16, 16, 16, 16, 16, -1, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, -1, -1},  // HIDRA 17 (C5)
			//
			{ -1, -1,  6,  6,  6,  6,  6, -1, -1,  6,  6,  6,  6,  6, -1,  7,  7,  7,  7,  7, -1,  7,  7,  7,  7,  7, -1, -1},  // HIDRA 18 (A6)
			{ -1, -1,  8,  8,  8,  8,  8, -1, -1,  8,  8,  8,  8,  8, -1,  9,  9,  9,  9,  9, -1,  9,  9,  9,  9,  9, -1, -1},  // HIDRA 19 (B6)
			{ -1, -1, 10, 10, 10, 10, 10, -1, -1, 10, 10, 10, 10, 10, -1, 11, 11, 11, 11, 11, -1, 11, 11, 11, 11, 11, -1, -1},  // HIDRA 20 (C6)
			{ -1, -1,  6,  6,  6,  6,  6, -1, -1,  6,  6,  6,  6,  6, -1,  7,  7,  7,  7,  7, -1,  7,  7,  7,  7,  7, -1, -1},  // HIDRA 21 (A7)
			{ -1, -1,  8,  8,  8,  8,  8, -1, -1,  8,  8,  8,  8,  8, -1,  9,  9,  9,  9,  9, -1,  9,  9,  9,  9,  9, -1, -1},  // HIDRA 22 (B7)
			{ -1, -1, 10, 10, 10, 10, 10, -1, -1, 10, 10, 10, 10, 10, -1, 11, 11, 11, 11, 11, -1, 11, 11, 11, 11, 11, -1, -1},  // HIDRA 23 (C7)
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  6,  6,  6,  6,  6, -1, -1,  6,  6,  6,  6,  6, -1,  7,  7,  7,  7,  7, -1,  7,  7,  7,  7,  7, -1, -1},  // HIDRA 24 (A8)
			{ -1, -1,  8,  8,  8,  8,  8, -1, -1,  8,  8,  8,  8,  8, -1,  9,  9,  9,  9,  9, -1,  9,  9,  9,  9,  9, -1, -1},  // HIDRA 25 (B8)
			{ -1, -1, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, -1, 11, 11, 11, 11, 11, 11, -1},  // HIDRA 26 (C8)
#else
			{ -1, -1,  6,  6,  6,  6,  6, -1, -1,  6,  6,  6,  6,  6, -1,  7,  7,  7,  7,  7, -1,  7,  7,  7,  7,  7, -1, -1},  // HIDRA 24 (A8)
			{ -1, -1,  8,  8,  8,  8,  8, -1, -1,  8,  8,  8,  8,  8, -1,  9,  9,  9,  9,  9, -1,  9,  9,  9,  9,  9, -1, -1},  // HIDRA 25 (B8)
			{ -1, -1, 10, 10, 10, 10, 10, -1, -1, 10, 10, 10, 10, 10, -1, 11, 11, 11, 11, 11, -1, 11, 11, 11, 11, 11, -1, -1},  // HIDRA 26 (C8)
#endif
			{ -1, -1,  6,  6,  6,  6,  6, -1, -1,  6,  6,  6,  6,  6, -1,  7,  7,  7,  7,  7, -1,  7,  7,  7,  7,  7, -1, -1},  // HIDRA 27 (A9)
			{ -1, -1,  8,  8,  8,  8,  8, -1, -1,  8,  8,  8,  8,  8, -1,  9,  9,  9,  9,  9, -1,  9,  9,  9,  9,  9, -1, -1},  // HIDRA 28 (B9)
			{ -1, -1, 10, 10, 10, 10, 10, -1, -1, 10, 10, 10, 10, 10, -1, 11, 11, 11, 11, 11, -1, 11, 11, 11, 11, 11, -1, -1},  // HIDRA 29 (C9)
			{ -1, -1,  6,  6,  6,  6,  6, -1, -1,  6,  6,  6,  6,  6, -1,  7,  7,  7,  7,  7, -1,  7,  7,  7,  7,  7, -1, -1},  // HIDRA 30 (A10)
			{ -1, -1,  8,  8,  8,  8,  8, -1, -1,  8,  8,  8,  8,  8, -1,  9,  9,  9,  9,  9, -1,  9,  9,  9,  9,  9, -1, -1},  // HIDRA 31 (B10)
			{ -1, -1, 10, 10, 10, 10, 10, -1, -1, 10, 10, 10, 10, 10, -1, 11, 11, 11, 11, 11, -1, 11, 11, 11, 11, 11, -1, -1},  // HIDRA 32 (C10)
			// Board 12: the Board number is different then the PM
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, 13, -1},  // HIDRA 33 (A11)
			{ -1, -1, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, 15, -1},  // HIDRA 34 (B11)
			{ -1, -1, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, -1, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, -1, -1},  // HIDRA 35 (C11)
#else
			{ -1, -1, 12, 12, 12, 12, 12, -1, -1, 12, 12, 12, 12, 12, -1, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, -1, -1},  // HIDRA 33 (A11)
			{ -1, -1, 14, 14, 14, 14, 14, -1, -1, 14, 14, 14, 14, 14, -1, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, -1, -1},  // HIDRA 34 (B11)
			{ -1, -1, 16, 16, 16, 16, 16, -1, -1, 16, 16, 16, 16, 16, -1, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, -1, -1},  // HIDRA 35 (C11)
#endif
			//
			{ -1, -1, 12, 12, 12, 12, 12, -1, -1, 12, 12, 12, 12, 12, -1, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, -1, -1},  // HIDRA 39 (A12)
			{ -1, -1, 14, 14, 14, 14, 14, -1, -1, 14, 14, 14, 14, 14, -1, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, -1, -1},  // HIDRA 40 (B12)
			{ -1, -1, 16, 16, 16, 16, 16, -1, -1, 16, 16, 16, 16, 16, -1, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, -1, -1},  // HIDRA 41 (C12)
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, 13, -1},  // HIDRA 39 (A13)
			{ -1, -1, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, 15, -1},  // HIDRA 40 (B13)
			{ -1, -1, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, 17, -1},  // HIDRA 41 (C13)
			{ -1, -1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, 13, -1},  // HIDRA 42 (A14)
			{ -1, -1, 14, 14, 14, 14, 14, 14, 16, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, 15, -1},  // HIDRA 43 (B14)
			{ -1, -1, 16, 16, 16, 16, 16, 16, 14, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, 17, -1},  // HIDRA 44 (C14)
#else
			{ -1, -1, 12, 12, 12, 12, 12, -1, -1, 12, 12, 12, 12, 12, -1, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, -1, -1},  // HIDRA 39 (A13)
			{ -1, -1, 14, 14, 14, 14, 14, -1, -1, 14, 14, 14, 14, 14, -1, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, -1, -1},  // HIDRA 40 (B13)
			{ -1, -1, 16, 16, 16, 16, 16, -1, -1, 16, 16, 16, 16, 16, -1, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, -1, -1},  // HIDRA 41 (C13)
			{ -1, -1, 12, 12, 12, 12, 12, -1, -1, 12, 12, 12, 12, 12, -1, 13, 13, 13, 13, 13, -1, 13, 13, 13, 13, 13, -1, -1},  // HIDRA 42 (A14)
			{ -1, -1, 14, 14, 14, 14, 14, -1, -1, 14, 14, 14, 14, 14, -1, 15, 15, 15, 15, 15, -1, 15, 15, 15, 15, 15, -1, -1},  // HIDRA 43 (B14)
			{ -1, -1, 16, 16, 16, 16, 16, -1, -1, 16, 16, 16, 16, 16, -1, 17, 17, 17, 17, 17, -1, 17, 17, 17, 17, 17, -1, -1},  // HIDRA 44 (C14)
#endif
			// fake channels
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 45 (A15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 46 (B15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 47 (C15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 48 (A16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 49 (B16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 50 (C16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 51 (A17)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 52 (B17)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}   // HIDRA 53 (C17)
	};

	static const int cubeMap[NCASISCHIPS][NCASISCHANNELS] = {
			//{discon,CN_A,-------LargeA------,holeAx2,------SmallA-------,holeB,-----SmallB------,CN_B,------LargeB------,holeB,discon}
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 0 (A0)
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 1 (B0)
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 2 (C0)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 3 (A1)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 4 (B1)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 5 (C1)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 6 (A2)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 7 (B2)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 8 (C2)
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 9 (A3)
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 10 (B3)
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 11 (C3)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 12 (A4)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 13 (B4)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 14 (C4)
			// Board 6: the Board number is different then the PM
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 33 (A11)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 34 (B11)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 35 (C11)
#else
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 15 (A5)
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 16 (B5)
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 17 (C5)
#endif
			//
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 18 (A6)
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 19 (B6)
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 20 (C6)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 21 (A7)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 22 (B7)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 23 (C7)
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 24 (A8)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 25 (B8)
			{ -1, -1,  2,  7, 12, 17, 22, 27, 27, 22, 17, 12,  7,  2, 27, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, 27, -1},  // HIDRA 26 (C8)
#else
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 24 (A8)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 25 (B8)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 26 (C8)
#endif
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 27 (A9)
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 28 (B9)
			{ -1, -1,  3,  8, 13, 18, 23, -1, -1, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 29 (C9)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 30 (A10
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 31 (B10)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 32 (C10)
			// Board 12: the Board number is different then the PM
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  3,  8, 13, 18, 23, 28, 28, 23, 18, 13,  8,  3, 28, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, 28, -1},  // HIDRA 15 (A5)
			{ -1, -1,  3,  8, 13, 18, 23, 28, 28, 23, 18, 13,  8,  3, 28, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, 28, -1},  // HIDRA 16 (B5)
			{ -1, -1,  3,  8, 13, 18, 23, 28, 28, 23, 18, 13,  8,  3, -1, 23, 18, 13,  8,  3, -1,  3,  8, 13, 18, 23, -1, -1},  // HIDRA 17 (C5)
#else
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 33 (A11)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 34 (B11)
			{ -1, -1,  4,  9, 14, 19, 24, -1, -1, 24, 19, 14,  9,  4, -1, 24, 19, 14,  9,  4, -1,  4,  9, 14, 19, 24, -1, -1},  // HIDRA 35 (C11)
#endif
			//
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 36 (A12)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 37 (B12)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 38 (C12)
			{ -1, -1,  0,  5, 10, 15, 20, 25, 25, 20, 15, 10,  5,  0, 25, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, 25, -1},  // HIDRA 39 (A13)
			{ -1, -1,  0,  5, 10, 15, 20, 25, 25, 20, 15, 10,  5,  0, 25, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, 25, -1},  // HIDRA 40 (B13)
			{ -1, -1,  0,  5, 10, 15, 20, 25, 25, 20, 15, 10,  5,  0, 25, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, 25, -1},  // HIDRA 41 (C13)
			{ -1, -1,  2,  7, 12, 17, 22, 27, 27, 22, 17, 12,  7,  2, 27, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, 27, -1},  // HIDRA 42 (A14)
			{ -1, -1,  2,  7, 12, 17, 22, 27, 27, 22, 17, 12,  7,  2, 27, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, 27, -1},  // HIDRA 43 (B14)
			{ -1, -1,  2,  7, 12, 17, 22, 27, 27, 22, 17, 12,  7,  2, 27, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, 27, -1},  // HIDRA 44 (C14)
#else
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 36 (A12)
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 37 (B12)
			{ -1, -1,  0,  5, 10, 15, 20, -1, -1, 20, 15, 10,  5,  0, -1, 20, 15, 10,  5,  0, -1,  0,  5, 10, 15, 20, -1, -1},  // HIDRA 38 (C12)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 39 (A13)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 40 (B13)
			{ -1, -1,  1,  6, 11, 16, 21, -1, -1, 21, 16, 11,  6,  1, -1, 21, 16, 11,  6,  1, -1,  1,  6, 11, 16, 21, -1, -1},  // HIDRA 41 (C13)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 42 (A14)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 43 (B14)
			{ -1, -1,  2,  7, 12, 17, 22, -1, -1, 22, 17, 12,  7,  2, -1, 22, 17, 12,  7,  2, -1,  2,  7, 12, 17, 22, -1, -1},  // HIDRA 44 (C14)
#endif
			// fake channels
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 45 (A15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 46 (B15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 47 (C15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 48 (A16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 49 (B16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 50 (C16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 51 (A17)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 52 (B17)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}   // HIDRA 53 (C17)
	};

	static const int sensorMap[NCASISCHIPS][NCASISCHANNELS] = {//Large==0, Small==1, Disconnected==-1
			//{discon,CN_A,-------LargeA------,holeAx2,------SmallA-------,holeB,-----SmallB------,CN_B,------LargeB------,holeB,discon}
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 0 (A0)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 1 (B0)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 2 (C0)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 3 (A1)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 4 (B1)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 5 (C1)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 6 (A2)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 7 (B2)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 8 (C2)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 9 (A3)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 10 (B3)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 11 (C3)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 12 (A4)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 13 (B4)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 14 (C4)
			// Board 6: the Board number is different then the PM
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 15 (A5)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 16 (B5)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 17 (C5)
			//
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 18 (A6)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 19 (B6)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 20 (C6)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 21 (A7)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 22 (B7)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 23 (C7)
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 24 (A8)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 25 (B8)
			{ -1, -1,  0,  0,  0,  0,  0, 1000000, 1000001,  1,  1,  1,  1,  1, 1000001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, 1000000, -1},  // HIDRA 26 (C8)
#else
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 24 (A8)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 25 (B8)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 26 (C8)
#endif
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 27 (A9)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 28 (B9)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 29 (C9)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 30 (A10
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 31 (B10)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 32 (C10)
			// Board 12: the Board number is different then the PM
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  0,  0,  0,  0,  0, 1000000, 1000001,  1,  1,  1,  1,  1, 1000001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, 1000000, -1},  // HIDRA 33 (A11)
			{ -1, -1,  0,  0,  0,  0,  0, 1000000, 1000001,  1,  1,  1,  1,  1, 1000001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, 1000000, -1},  // HIDRA 34 (B11)
			{ -1, -1,  0,  0,  0,  0,  0, 1000000, 1000001,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 35 (C11)
#else
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 33 (A11)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 34 (B11)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 35 (C11)
#endif
			//
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 36 (A12)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 37 (B12)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 38 (C12)
#if defined(SPS2017Aug) || defined(SPS2017Nov)
			{ -1, -1,  0,  0,  0,  0,  0,  1000,  1001,  1,  1,  1,  1,  1,  1001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0,  1000, -1},  // HIDRA 39 (A13)
			{ -1, -1,  0,  0,  0,  0,  0,  1000,  1001,  1,  1,  1,  1,  1,  1001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0,  1000, -1},  // HIDRA 40 (B13)
			{ -1, -1,  0,  0,  0,  0,  0,  1000,  1001,  1,  1,  1,  1,  1,  1001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0,  1000, -1},  // HIDRA 41 (C13)
			{ -1, -1,  0,  0,  0,  0,  0, 1000000, 1000001,  1,  1,  1,  1,  1, 1000001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, 1000000, -1},  // HIDRA 42 (A14)
			{ -1, -1,  0,  0,  0,  0,  0, 1000000, 1000001,  1,  1,  1,  1,  1, 1000001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, 1000000, -1},  // HIDRA 43 (B14)
			{ -1, -1,  0,  0,  0,  0,  0, 1000000, 1000001,  1,  1,  1,  1,  1, 1000001,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, 1000000, -1},  // HIDRA 44 (C14)
#else
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 39 (A13)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 40 (B13)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 41 (C13)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 42 (A14)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 43 (B14)
			{ -1, -1,  0,  0,  0,  0,  0, -1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1, -1,  0,  0,  0,  0,  0, -1, -1},  // HIDRA 44 (C14)
#endif
			// fake channels
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 45 (A15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 46 (B15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 47 (C15)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 48 (A16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 49 (B16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 50 (C16)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 51 (A17)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},  // HIDRA 52 (B17)
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}   // HIDRA 53 (C17)
	};

	if(cubeMap[casis][casisChannel]<0  )return false;
	if(layerMap[casis][casisChannel]<0 )return false;
	if(sensorMap[casis][casisChannel]<0)return false;

	row = (int)(cubeMap[casis][casisChannel] / NCOLS);
	col = (cubeMap[casis][casisChannel] % NCOLS);
	layer = layerMap[casis][casisChannel];
	sensor = sensorMap[casis][casisChannel];

	return true;
}
int GetSensor(int casis, int casisChannel){
	int sensor,row,col,layer;
	Chip2Cube(casis,casisChannel,row,col,layer,sensor);
	return sensor;
}

bool InstrumentedChannel(int casis, int casisChannel) {
	int row,col,layer,sensor;
	return
			Chip2Cube(casis,casisChannel,row,col,layer, sensor);
}

bool GoodChannel(int casis, int casisChannel) {
	if(!InstrumentedChannel(casis,casisChannel)) return false;
#if defined(SPS2017Aug) || defined(SPS2017Nov)
	if (casis == 13)
		if (casisChannel == 18) //layer 3, col 4, row 1, cube 9 SMALL broken
			return false;
	//Per il laboratorio di subnucleare con gli studenti
	//if(casis==24 || casis==25 || casis==26)
	//	return false;
#endif

	return true;
}

bool GoodChannelForCN(int casis, int casisChannel) {
	if (casis < 45) {
		if ( (casisChannel == 1) || (casisChannel == 20) )
			return true;
	}
	return false;
}

bool Cube2Chip(int row, int col, int layer, int sensor, int &casis, int &casisChannel){

	if(row<0 || row>=NROWS) return false;
	if(col<0 || col>=NCOLS) return false;
	if(layer<0 || layer>=NLAYERS) return false;
	if(sensor<0)return false;

	//initialization
	casis=-1;
	casisChannel=-1;

	const int CUBESINLAYER = NCOLS*NROWS;
	int cube = NCOLS * row + col;

#if defined(SPS2017Aug) || defined(SPS2017Nov)
	static const int chipMap[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12, -1, -1, -1, -1, -1}, //layer 0 ----------------------
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12, -1, -1, -1, -1, -1}, //layer 1
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13, -1, -1, -1, -1, -1}, //layer 2        PM1:PM5
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13, -1, -1, -1, -1, -1}, //layer 3     Hydra0:Hydra14
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14, -1, -1, -1, -1, -1}, //layer 4
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14, -1, -1, -1, -1, -1}, //layer 5 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, -1, -1, -1, -1, -1}, //layer 6 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, -1, -1, -1, -1, -1}, //layer 7
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, -1, -1, -1, -1, -1}, //layer 8        PM7:PM11
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, -1, -1, -1, -1, -1}, //layer 9    Hydra18:Hydra32
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, -1, -1, 26, -1, -1}, //layer 10
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, -1, -1, 26, -1, -1}, //layer 11 ---------------------
			{39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, -1, 42, 33, -1}, //layer 12 ---------------------
			{39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, -1, 42, 33, -1}, //layer 13      PM13:PM17
			{40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, -1, 43, 34, -1}, //layer 14   Hydra36:Hydra44 +
			{40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, -1, 43, 34, -1}, //layer 15   Hydra15:Hydra17 +
			{41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 40, -1, 44, 35, -1}, //layer 16   Hydra33:Hydra35
			{41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 40, -1, 44, -1, -1}  //layer 17 ---------------------
	};
#else
	static const int chipMap[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12}, //layer 0 ----------------------
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12}, //layer 1
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13}, //layer 2        PM1:PM5
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13}, //layer 3     Hydra0:Hydra14
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14}, //layer 4
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14}, //layer 5 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30}, //layer 6 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30}, //layer 7
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31}, //layer 8        PM7:PM11
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31}, //layer 9    Hydra18:Hydra32
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32}, //layer 10
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32}, //layer 11 ---------------------
			{36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33}, //layer 12 ---------------------
			{36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33}, //layer 13      PM13:PM17
			{37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34}, //layer 14   Hydra36:Hydra44 +
			{37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34}, //layer 15   Hydra15:Hydra17 +
			{38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35}, //layer 16   Hydra33:Hydra35
			{38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35}  //layer 17 ---------------------
	};
#endif

#if defined(SPS2017Aug) || defined(SPS2017Nov)
	static const int channelMap[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6, -1, -1, -1, -1, -1}, //layer 0
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, -1, -1, -1, -1, -1}, //layer 1
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6, -1, -1, -1, -1, -1}, //layer 2
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, -1, -1, -1, -1, -1}, //layer 3
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6, -1, -1, -1, -1, -1}, //layer 4
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, -1, -1, -1, -1, -1}, //layer 5
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6, -1, -1, -1, -1, -1}, //layer 6
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, -1, -1, -1, -1, -1}, //layer 7
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6, -1, -1, -1, -1, -1}, //layer 8
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, -1, -1, -1, -1, -1}, //layer 9
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6, -1, -1,  6, -1, -1}, //layer 10
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, -1, -1, 25, -1, -1}, //layer 11
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  7, -1,  7,  7, -1}, //layer 12
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 26, -1, 26, 26, -1}, //layer 13
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  7, -1,  7,  7, -1}, //layer 14
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 26, -1, 26, 26, -1}, //layer 15
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  7, -1,  7,  7, -1}, //layer 16
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 26, -1, 26, -1, -1}  //layer 17
	};
#else
	static const int channelMap[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 0
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 1
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 2
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 3
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 4
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 5
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 6
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 7
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 8
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 9
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 10
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 11
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 12
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 13
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 14
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}, //layer 15
			{ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6}, //layer 16
			{21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25}  //layer 17
	};
#endif


#if defined(SPS2017Aug) || defined(SPS2017Nov)
	static const int chipMapSmall[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12, -1, -1, -1, -1, -1}, //layer 0 ----------------------
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12, -1, -1, -1, -1, -1}, //layer 1
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13, -1, -1, -1, -1, -1}, //layer 2        PM1:PM5
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13, -1, -1, -1, -1, -1}, //layer 3     Hydra0:Hydra14
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14, -1, -1, -1, -1, -1}, //layer 4
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14, -1, -1, -1, -1, -1}, //layer 5 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, -1, -1, -1, -1, -1}, //layer 6 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, -1, -1, -1, -1, -1}, //layer 7
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, -1, -1, -1, -1, -1}, //layer 8        PM7:PM11
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, -1, -1, -1, -1, -1}, //layer 9    Hydra18:Hydra32
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, -1, -1, 26, -1, -1}, //layer 10
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, -1, -1, 26, -1, -1}, //layer 11 ---------------------
			{39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, -1, 42, 33, -1}, //layer 12 ---------------------
			{39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, 36, 42, 33, 15, 39, -1, 42, 33, -1}, //layer 13      PM13:PM17
			{40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, -1, 43, 34, -1}, //layer 14   Hydra36:Hydra44 +
			{40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, 37, 43, 34, 16, 40, -1, 43, 34, -1}, //layer 15   Hydra15:Hydra17 +
			{41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, -1, 44, 35, -1}, //layer 16   Hydra33:Hydra35
			{41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, 38, 44, 35, 17, 41, -1, 44, -1, -1}  //layer 17 ---------------------
	};
#else
	static const int chipMapSmall[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12}, //layer 0 ----------------------
			{ 0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12,  0,  3,  6,  9, 12}, //layer 1
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13}, //layer 2        PM1:PM5
			{ 1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13,  1,  4,  7, 10, 13}, //layer 3     Hydra0:Hydra14
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14}, //layer 4
			{ 2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14,  2,  5,  8, 11, 14}, //layer 5 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30}, //layer 6 ----------------------
			{18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30, 18, 21, 24, 27, 30}, //layer 7
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31}, //layer 8        PM7:PM11
			{19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31, 19, 22, 25, 28, 31}, //layer 9    Hydra18:Hydra32
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32}, //layer 10
			{20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32, 20, 23, 26, 29, 32}, //layer 11 ---------------------
			{36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33}, //layer 12 ---------------------
			{36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33, 36, 39, 42, 15, 33}, //layer 13      PM13:PM17
			{37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34}, //layer 14   Hydra36:Hydra44 +
			{37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34, 37, 40, 43, 16, 34}, //layer 15   Hydra15:Hydra17 +
			{38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35}, //layer 16   Hydra33:Hydra35
			{38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35, 38, 41, 44, 17, 35}  //layer 17 ---------------------
	};
#endif

#if defined(SPS2017Aug) || defined(SPS2017Nov)
	static const int channelMapSmall[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9, -1, -1, -1, -1, -1}, //layer 0
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, -1, -1, -1, -1, -1}, //layer 1
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9, -1, -1, -1, -1, -1}, //layer 2
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, -1, -1, -1, -1, -1}, //layer 3
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9, -1, -1, -1, -1, -1}, //layer 4
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, -1, -1, -1, -1, -1}, //layer 5
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9, -1, -1, -1, -1, -1}, //layer 6
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, -1, -1, -1, -1, -1}, //layer 7
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9, -1, -1, -1, -1, -1}, //layer 8
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, -1, -1, -1, -1, -1}, //layer 9
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9, -1, -1,  8, -1, -1}, //layer 10
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, -1, -1, 14, -1, -1}, //layer 11
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9,  8, -1,  8,  8, -1}, //layer 12
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 14, -1, 14, 14, -1}, //layer 13
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9,  8, -1,  8,  8, -1}, //layer 14
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 14, -1, 14, 14, -1}, //layer 15
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9,  8, -1,  8,  8, -1}, //layer 16
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 14, -1, 14, -1, -1}  //layer 17
	};
#else
	static const int channelMapSmall[NLAYERS][CUBESINLAYER] = {
			//{ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 0
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 1
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 2
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 3
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 4
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 5
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 6
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 7
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 8
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 9
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 10
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 11
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 12
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 13
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 14
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}, //layer 15
			{13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10,  9,  9,  9,  9,  9}, //layer 16
			{19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15}  //layer 17
	};
#endif

	if(sensor==0){//large sensor
		casis=chipMap[layer][cube];
		casisChannel=channelMap[layer][cube];
	}

	if(sensor==1){//small sensor
		casis=chipMapSmall[layer][cube];
		casisChannel=channelMapSmall[layer][cube];
	}

	return true;
}

void Cube2Coord(int row, int col, int layer, float &x, float &y, float &z){

	// origin on the center of the top surface
	static const float oRow = 1.;
	static const float oCol = 1.;
	static const float oLayer = -0.5;

	x =  1.*((float)row - oRow);
	y = -1.*((float)col - oCol);
	z = -1.*((float)layer - oLayer);
}
