CSP_AQS_TMIN.TS
   1:SEND COMMAND                  :CAN-02, C95, CSP_AQS_CONFIGURATION_1N_DUR_MIN.CMM, 0
   2:SEND COMMAND                  :CAN-02, C95, CSP_AQS_CONFIGURATION_2N_DUR_MIN.CMM, 0
   3:SEND COMMAND                  :CAN-02, C95, CSP_AQS_CONFIGURATION_1R_DUR_MIN.CMM, 0
   4:SEND COMMAND                  :CAN-02, C95, CSP_AQS_CONFIGURATION_2R_DUR_MIN.CMM, 0
   5:SEND COMMAND                  :CAN-02, CCC, CSP_GET_RDS_AQS_CONFIGURATION_1N.CMM, 0
   5:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   5:SEND COMMAND                  :CAN-02, CCC, CSP_GET_RDS_AQS_CONFIGURATION_2N.CMM, 0
   5:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   5:SEND COMMAND                  :CAN-02, CCC, CSP_GET_RDS_AQS_CONFIGURATION_1R.CMM, 0
   5:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   5:SEND COMMAND                  :CAN-02, CCC, CSP_GET_RDS_AQS_CONFIGURATION_2R.CMM, 0
   5:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
CSP_BATT_LCL_OFF_ON_N.TS
   1:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_NOM_OFF.CMM, 0
   2:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
   3:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   4:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_RED_OFF.CMM, 0
   5:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 3, SEC
   6:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   7:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_NOM_ON.CMM, 0
   8:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
   9:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  10:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_RED_ON.CMM, 0
  11:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  12:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
CSP_BATT_LCL_OFF_ON_R.TS
   1:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_RED_OFF.CMM, 0
   2:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
   3:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   4:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_NOM_OFF.CMM, 0
   5:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 3, SEC
   6:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   7:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_RED_ON.CMM, 0
   8:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
   9:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  10:SEND COMMAND                  :CAN-02, CB8, CAB_ON_OFF_LCL_NOM_ON.CMM, 0
  11:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  12:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
CSP_DISABLE_MD_DETECTION.TS
   1:SEND COMMAND                  :CAN-02, C9F, CSP_ENA_DIS_DETECTION_1N_MD_DIS.CMM, 0
   2:SEND COMMAND                  :CAN-02, C9F, CSP_ENA_DIS_DETECTION_2N_MD_DIS.CMM, 0
   3:SEND COMMAND                  :CAN-02, CC5, CSP_GET_GENERAL_STATUS_NOM.CMM, 0
   4:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
   5:SEND COMMAND                  :CAN-02, C9F, CSP_ENA_DIS_DETECTION_1R_MD_DIS.CMM, 0
   6:SEND COMMAND                  :CAN-02, C9F, CSP_ENA_DIS_DETECTION_2R_MD_DIS.CMM, 0
   7:SEND COMMAND                  :CAN-02, CC5, CSP_GET_GENERAL_STATUS_RED.CMM, 0
   8:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
CSP_ENABLE_CL_DETECTION.TS
  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, CE4, CSP_ARM_DISARM_BIL_VALVE_NOM_ARM_OPEN_V21A.CMM, 0
  17:SEND COMMAND                  :CAN-02, CC5, CSP_GET_GENERAL_STATUS_NOM.CMM, 0
  18:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE 
  19:SEND COMMAND                  :CAN-02, CE7, CSP_OPERATE_BIL_VALVE_NOM.CMM, 0
  20:SEND COMMAND                  :CAN-02, CC9, CSP_GET_VALVES_STATUS_NOM.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE

  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, CE4, CSP_ARM_DISARM_BIL_VALVE_RED_ARM_OPEN_V21B.CMM, 0
  17:SEND COMMAND                  :CAN-02, CC5, CSP_GET_GENERAL_STATUS_RED.CMM, 0
  18:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE 
  19:SEND COMMAND                  :CAN-02, CE7, CSP_OPERATE_BIL_VALVE_RED.CMM, 0
  20:SEND COMMAND                  :CAN-02, CC9, CSP_GET_VALVES_STATUS_RED.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE

  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, CE4, CSP_ARM_DISARM_BIL_VALVE_NOM_ARM_OPEN_V21C.CMM, 0
  17:SEND COMMAND                  :CAN-02, CC5, CSP_GET_GENERAL_STATUS_NOM.CMM, 0
  18:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE 
  19:SEND COMMAND                  :CAN-02, CE7, CSP_OPERATE_BIL_VALVE_NOM.CMM, 0
  20:SEND COMMAND                  :CAN-02, CC9, CSP_GET_VALVES_STATUS_NOM.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE

  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, CE4, CSP_ARM_DISARM_BIL_VALVE_RED_ARM_OPEN_V21D.CMM, 0
  17:SEND COMMAND                  :CAN-02, CC5, CSP_GET_GENERAL_STATUS_RED.CMM, 0
  18:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE 
  19:SEND COMMAND                  :CAN-02, CE7, CSP_OPERATE_BIL_VALVE_RED.CMM, 0
  20:SEND COMMAND                  :CAN-02, CC9, CSP_GET_VALVES_STATUS_RED.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
 
   2:SEND COMMAND                  :CAN-02, CC5, CSP_GET_GENERAL_STATUS_NOM.CMM, 0
   5:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE

DLCM_10SAMPLES_NOM.TS
  1:SEND COMMAND                  :CAN-02, C33, DLCM_START_ACQ_SEQ_NOM_10SEC.CMM, 0
   2:SEND COMMAND                  :CAN-02, C35, DLCM_READ_SLICE_CYCLE_1_NUM_CYCLES_10.CMM, 0
   3:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
DLCM_10SAMPLES_RED.TS
   1:SEND COMMAND                  :CAN-02, C33, DLCM_START_ACQ_SEQ_RED_10SEC.CMM, 0
   2:SEND COMMAND                  :CAN-02, C35, DLCM_READ_SLICE_CYCLE_1_NUM_CYCLES_10.CMM, 0
   3:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
INIT_N.TS
   1:SELECT JMDC                   :UTC-02, JMDC0
   2:SELECT CAB CPU                :UTC-03, CPU_N
   3:SELECT REQUEST BUS            :UTC-04, BUS_N
   4:SELECT REPLY BUS              :UTC-05, BUS_N
   5:SELECT ADDRESS TYPE           :UTC-06, PHYS
   6:SET PCI-CAN BUS TIMEOUT       :UTC-08,     1000
   7:E/D COMMAND CRC               :UTC-09, ENABLE
   8:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_N, DISABLE
   9:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_N, 28000
  10:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_N, 7000
  11:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_N, ENABLE
  12:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 14, SEC
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  14:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, C18, CAB_LOAD_APSW_SW_PROGRAM_1.CMM, 0
  17:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 5, SEC
  18:SEND COMMAND                  :CAN-02, C1B, CAB_GO_APSW.CMM, 0
  19:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 1, SEC
  20:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, select, NONE
  22:SEND COMMAND                  :CAN-02, C1E, CAB_READ_AND_RESET_ERROR_INFO.CMM, 0
  23:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  24:REQUEST MESSAGE               :GEP-05, Encendemos 28V Bus_R, NONE
  25:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_R, DISABLE
  26:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_R, DISABLE
  27:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_R, 28000
  28:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_R, 7000
  29:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_R, ENABLE
  30:REQUEST MESSAGE               :GEP-05, WARNING_Select CPU R to enable R Latchup protection, NONE
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  30:REQUEST MESSAGE               :GEP-05, Encendemos Battery simulator_NOM, NONE
  31:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_N, DISABLE
  32:SET PS OVERCURRENT PROTECTION :PWS-08, BATTERY_SIMULATOR_N, DISABLE
  33:SET PS OUTPUT VOLTAGE         :PWS-02, BATTERY_SIMULATOR_N, 32800
  34:SET PS OUTPUT CURRENT         :PWS-03, BATTERY_SIMULATOR_N, 2500
  35:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_N, ENABLE
  36:REQUEST MESSAGE               :GEP-05, Encendemos CSP , NONE   
  37:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CL1_ON.CMM, 0
  38:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  39:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CL2_ON.CMM, 0
  40:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  41:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CL3_ON.CMM, 0
  42:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  43:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  44:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_MD1_ON.CMM, 0
  45:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  46:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_MD2_ON.CMM, 0
  47:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  48:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_MD3_ON.CMM, 0
  49:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  50:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  51:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CTRL_NOM_ON.CMM, 0
  52:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  53:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  54:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 3, SEC
  55:REQUEST MESSAGE               :GEP-05, Encendemos Battery simulator_RED, NONE
  56:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_R, DISABLE
  57:SET PS OVERCURRENT PROTECTION :PWS-08, BATTERY_SIMULATOR_R, DISABLE
  58:SET PS OUTPUT VOLTAGE         :PWS-02, BATTERY_SIMULATOR_R, 32800
  59:SET PS OUTPUT CURRENT         :PWS-03, BATTERY_SIMULATOR_R, 2500
  60:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_R, ENABLE
  61:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 3, SEC
  62:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  63:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  64:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CTRL_RED_ON.CMM, 0
  65:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  66:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE   
  67:REQUEST MESSAGE               :GEP-05, Encendemos los switch de los cargadores NOM y RED , NONE
INIT_R.TS
   1:SELECT JMDC                   :UTC-02, JMDC0
   2:SELECT CAB CPU                :UTC-03, CPU_R
   3:SELECT REQUEST BUS            :UTC-04, BUS_N
   4:SELECT REPLY BUS              :UTC-05, BUS_N
   5:SELECT ADDRESS TYPE           :UTC-06, PHYS
   6:SET PCI-CAN BUS TIMEOUT       :UTC-08,     1000
   7:E/D COMMAND CRC               :UTC-09, ENABLE
   8:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_R, DISABLE
   9:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_R, 28000
  10:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_R, 7000
  11:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_R, ENABLE
  12:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 14, SEC
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  14:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, C18, CAB_LOAD_APSW_SW_PROGRAM_1.CMM, 0
  17:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 5, SEC
  18:SEND COMMAND                  :CAN-02, C1B, CAB_GO_APSW.CMM, 0
  19:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 1, SEC
  20:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, select, NONE
  22:SEND COMMAND                  :CAN-02, C1E, CAB_READ_AND_RESET_ERROR_INFO.CMM, 0
  23:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  24:REQUEST MESSAGE               :GEP-05, Encendemos 28V Bus_N, NONE
  25:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_N, DISABLE
  26:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_N, DISABLE
  27:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_N, 28000
  28:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_N, 7000
  29:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_N, ENABLE
  30:REQUEST MESSAGE               :GEP-05, WARNING_Select CPU N to enable N Latchup protection, NONE
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  30:REQUEST MESSAGE               :GEP-05, Encendemos Battery simulator_RED, NONE
  31:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_R, DISABLE
  32:SET PS OVERCURRENT PROTECTION :PWS-08, BATTERY_SIMULATOR_R, DISABLE
  33:SET PS OUTPUT VOLTAGE         :PWS-02, BATTERY_SIMULATOR_R, 32800
  34:SET PS OUTPUT CURRENT         :PWS-03, BATTERY_SIMULATOR_R, 2500
  35:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_R, ENABLE
  36:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 3, SEC
  37:REQUEST MESSAGE               :GEP-05, Encendemos CSP , NONE   
  38:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CL1_ON.CMM, 0
  39:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  40:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CL2_ON.CMM, 0
  41:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  42:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CL3_ON.CMM, 0
  43:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  44:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  45:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_MD1_ON.CMM, 0
  46:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  47:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_MD2_ON.CMM, 0
  48:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  49:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_MD3_ON.CMM, 0
  50:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  51:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  52:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CTRL_RED_ON.CMM, 0
  53:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  54:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  55:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 3, SEC
  56:REQUEST MESSAGE               :GEP-05, Encendemos Battery simulator_NOM, NONE
  57:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_N, DISABLE
  58:SET PS OVERCURRENT PROTECTION :PWS-08, BATTERY_SIMULATOR_N, DISABLE
  59:SET PS OUTPUT VOLTAGE         :PWS-02, BATTERY_SIMULATOR_N, 32800
  60:SET PS OUTPUT CURRENT         :PWS-03, BATTERY_SIMULATOR_N, 2500
  61:E/D PS OUTPUT                 :PWS-05, BATTERY_SIMULATOR_N, ENABLE
  62:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 3, SEC
  63:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  64:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  65:SEND COMMAND                  :CAN-02, CB7, CSP_ON_OFF_CONVERTERS_CTRL_NOM_ON.CMM, 0
  66:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  67:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  68:REQUEST MESSAGE               :GEP-05, Encendemos los switch de los cargadores NOM y RED , NONE
INIT_UT_CPU_N_BUS_N.TS
   1:SELECT JMDC                   :UTC-02, JMDC0
   2:SELECT CAB CPU                :UTC-03, CPU_N
   3:SELECT REQUEST BUS            :UTC-04, BUS_N
   4:SELECT REPLY BUS              :UTC-05, BUS_N
   5:SELECT ADDRESS TYPE           :UTC-06, PHYS
   6:SET PCI-CAN BUS TIMEOUT       :UTC-08,     1000
   7:E/D COMMAND CRC               :UTC-09, ENABLE
   8:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_N, DISABLE
   9:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_N, 28000
  10:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_N, 7000
  11:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_N, ENABLE
  12:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 14, SEC
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  14:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, C18, CAB_LOAD_APSW_SW_PROGRAM_1.CMM, 0
  17:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 5, SEC
  18:SEND COMMAND                  :CAN-02, C1B, CAB_GO_APSW.CMM, 0
  19:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 1, SEC
  20:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, select, NONE
  22:SEND COMMAND                  :CAN-02, C1E, CAB_READ_AND_RESET_ERROR_INFO.CMM, 0
  23:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  24:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
INIT_UT_CPU_N_BUS_R.TS
   1:SELECT JMDC                   :UTC-02, JMDC0
   2:SELECT CAB CPU                :UTC-03, CPU_N
   3:SELECT REQUEST BUS            :UTC-04, BUS_R
   4:SELECT REPLY BUS              :UTC-05, BUS_R
   5:SELECT ADDRESS TYPE           :UTC-06, PHYS
   6:SET PCI-CAN BUS TIMEOUT       :UTC-08,     1000
   7:E/D COMMAND CRC               :UTC-09, ENABLE
   8:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_N, DISABLE
   9:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_N, 28000
  10:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_N, 7000
  11:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_N, ENABLE
  12:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 14, SEC
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  14:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, C18, CAB_LOAD_APSW_SW_PROGRAM_1.CMM, 0
  17:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 5, SEC
  18:SEND COMMAND                  :CAN-02, C1B, CAB_GO_APSW.CMM, 0
  19:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 1, SEC
  20:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, select, NONE
  22:SEND COMMAND                  :CAN-02, C1E, CAB_READ_AND_RESET_ERROR_INFO.CMM, 0
  23:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  24:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
INIT_UT_CPU_R_BUS_N.TS
   1:SELECT JMDC                   :UTC-02, JMDC0
   2:SELECT CAB CPU                :UTC-03, CPU_R
   3:SELECT REQUEST BUS            :UTC-04, BUS_N
   4:SELECT REPLY BUS              :UTC-05, BUS_N
   5:SELECT ADDRESS TYPE           :UTC-06, PHYS
   6:SET PCI-CAN BUS TIMEOUT       :UTC-08,     1000
   7:E/D COMMAND CRC               :UTC-09, ENABLE
   8:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_R, DISABLE
   9:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_R, 28000
  10:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_R, 7000
  11:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_R, ENABLE
  12:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 14, SEC
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  14:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, C18, CAB_LOAD_APSW_SW_PROGRAM_1.CMM, 0
  17:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 5, SEC
  18:SEND COMMAND                  :CAN-02, C1B, CAB_GO_APSW.CMM, 0
  19:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 1, SEC
  20:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, select, NONE
  22:SEND COMMAND                  :CAN-02, C1E, CAB_READ_AND_RESET_ERROR_INFO.CMM, 0
  23:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  24:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
INIT_UT_CPU_R_BUS_R.TS
   1:SELECT JMDC                   :UTC-02, JMDC0
   2:SELECT CAB CPU                :UTC-03, CPU_R
   3:SELECT REQUEST BUS            :UTC-04, BUS_R
   4:SELECT REPLY BUS              :UTC-05, BUS_R
   5:SELECT ADDRESS TYPE           :UTC-06, PHYS
   6:SET PCI-CAN BUS TIMEOUT       :UTC-08,     1000
   7:E/D COMMAND CRC               :UTC-09, ENABLE
   8:SET PS OVERCURRENT PROTECTION :PWS-08, 28V_POWER_BUS_R, DISABLE
   9:SET PS OUTPUT VOLTAGE         :PWS-02, 28V_POWER_BUS_R, 28000
  10:SET PS OUTPUT CURRENT         :PWS-03, 28V_POWER_BUS_R, 7000
  11:E/D PS OUTPUT                 :PWS-05, 28V_POWER_BUS_R, ENABLE
  12:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 14, SEC
  13:SEND COMMAND                  :CAN-02, C0A, CAB_LATCHUP_PROTECT_ENABLE.CMM, 0
  14:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  15:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
  16:SEND COMMAND                  :CAN-02, C18, CAB_LOAD_APSW_SW_PROGRAM_1.CMM, 0
  17:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 5, SEC
  18:SEND COMMAND                  :CAN-02, C1B, CAB_GO_APSW.CMM, 0
  19:WAIT N SECONDS/MILLI-SECONDS  :GEP-04, 1, SEC
  20:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  21:REQUEST MESSAGE               :GEP-05, select, NONE
  22:SEND COMMAND                  :CAN-02, C1E, CAB_READ_AND_RESET_ERROR_INFO.CMM, 0
  23:SEND COMMAND                  :CAN-02, C03, CAB_GET_ESSENTIAL_STATUS.CMM, 0
  24:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
PTM_N.TS
   1:SEND COMMAND                  :CAN-02, C28, PTM_START_ACQ_SEQ_NOM.CMM, 0
   2:SEND COMMAND                  :CAN-02, C2B, PTM_READ_NOM.CMM, 0
   3:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE
PTM_R.TS
   1:SEND COMMAND                  :CAN-02, C28, PTM_START_ACQ_SEQ_RED.CMM, 0
   2:SEND COMMAND                  :CAN-02, C2B, PTM_READ_RED.CMM, 0
   3:REQUEST MESSAGE               :GEP-05, This is a request message example, NONE