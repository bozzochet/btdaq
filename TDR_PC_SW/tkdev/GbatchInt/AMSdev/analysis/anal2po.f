*  $Id: anal2po.f,v 1.1.1.1 2007/11/13 09:56:10 zuccon Exp $
      REAL FUNCTION anal2po(t1,t2)
*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      1    
*     Ntuple Title:   Converted Ntuple
*     Creation:       17/10/96 20.42.24
*
*********************************************************
*
      LOGICAL         CHAIN
      CHARACTER*128   CFILE
      INTEGER         IDNEVT,NCHEVT,ICHEVT
      REAL            OBS(13)
*
      COMMON /PAWIDN/ IDNEVT,OBS
      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
      COMMON /PAWCHC/ CFILE
*
*
*--   Ntuple Variable Declarations
*

      REAL PolePhi,ThetaS,PhiS,beta(10),betaerror(10),betachi2(10)
     + ,chargebetap(10),probtof(7,10),probtracker(7,10),pmass(10)
     + ,perrmass(10),pmom(10),perrmom(10),pcharge(10),ptheta(10)
     + ,pphi(10),pcoo(3,10),signalctc(2,10),betactc(2,10)
     + ,errorbetactc(2,10),cooctc(3,2,10),TOFEdep(20),TOFTime(20)
     + ,TOFETime(20),TOFCoo(3,20),TOFErCoo(3,20),TOFMCXcoo(3,200)
     + ,TOFMCtof(200),TOFMCedep(200),Sumt(50),Sigmat(50),Meant(50)
     + ,RMSt(50),ErrorMeant(50),Amplitude(5,50),ss(5,2,200),xca(3,200)
     + ,xcb(3,200),xgl(3,200),summc(200),hitr(3,200),ehitr(3,200)
     + ,sumr(200),difosum(200),Chi2StrLine(20),Chi2Circle(20)
     + ,CircleRidgidity(20),Chi2FastFit(20),Ridgidity(20)
     + ,ErrRidgidity(20),Theta(20),phi(20),p0(3,20),gchi2(20)
     + ,gridgidity(20),gerrridgidity(20),gtheta(20),gphi(20),gp0(3,20)
     + ,hchi2(2,20),HRidgidity(2,20),HErrRidgidity(2,20),htheta(2,20)
     + ,hphi(2,20),hp0(3,2,20),fchi2ms(20),gchi2ms(20),ridgidityms(20)
     + ,gridgidityms(20),coo(3,20),dir(3,20),momentum(20),mass(20)
     + ,charge(20),ctccoo(3,20),ctcercoo(3,20),ctcrawsignal(20)
     + ,ctcsignal(20),ctcesignal(20),CTCMCXcoo(3,200),CTCMCXdir(3,200)
     + ,CTCstep(200)
      REAL ctccharge(200),ctcbeta(200),ctcedep(200),AntiEdep(16)
     + ,AntiCoo(3,16),AntiErCoo(3,16),AntiMCXcoo(3,200),AntiMCtof(200)
     + ,AntiMCedep(200),LVL3Residual(2,2),LVL3Time(2)
      INTEGER eventno,run,runtype,time(2),Particles,Tracks,Betas,Charges
     + ,TrRecHits,TrClusters,TrMCClusters,TOFClusters,TOFMCClusters
     + ,CTCClusters,CTCMCClusters,AntiMCClusters,AntiClusters,nbeta
     + ,betapattern(10),ncharge,chargetof(10),chargetracker(10),npart
     + ,pctcp(2,10),pbetap(10),pchargep(10),ptrackp(10),pid(10),ntof
     + ,TOFStatus(20),plane(20),bar(20),ntofmc,TOFMCIdsoft(200),ntrcl
     + ,Idsoft(50),Statust(50),NelemL(50),NelemR(50),ntrclmc
     + ,IdsoftMC(200),Itra(200),Left(2,200),Center(2,200),Right(2,200)
     + ,ntrrh,px(200),py(200),statusr(200),Layer(200),ntrtr,trstatus(20)
     + ,pattern(20),nhits(20),phits(6,20),FastFitDone(20)
     + ,GeaneFitDone(20),AdvancedFitDone(20),nmcg,nskip(20),Particle(20)
     + ,nctccl,CTCStatus(20),CTCLayer(20),nctcclmc,CTCMCIdsoft(200)
     + ,nanti,AntiStatus(16),AntiSector(16),nantimc,AntiMCIdsoft(200)
     + ,nlvl3,LVL3TOFTr(2),LVL3AntiTr(2),LVL3TrackerTr(2),LVL3NTrHits(2)
     + ,LVL3NPat(2),LVL3Pattern(2,2),nlvl1,LVL1Mode(2),LVL1TOFPatt(4,2)
     + ,LVL1AntiPatt
*
      COMMON /PAWCR4/ eventno,run,runtype,time,PolePhi,ThetaS,PhiS
     + ,Particles,Tracks,Betas,Charges,TrRecHits,TrClusters,TrMCClusters
     + ,TOFClusters,TOFMCClusters,CTCClusters,CTCMCClusters
     + ,AntiMCClusters,AntiClusters,nbeta,betapattern,beta,betaerror
     + ,betachi2,ncharge,chargebetap,chargetof,chargetracker,probtof
     + ,probtracker,npart,pctcp,pbetap,pchargep,ptrackp,pid,pmass
     + ,perrmass,pmom,perrmom,pcharge,ptheta,pphi,pcoo,signalctc,betactc
     + ,errorbetactc,cooctc,ntof,TOFStatus,plane,bar,TOFEdep,TOFTime
     + ,TOFETime,TOFCoo,TOFErCoo,ntofmc,TOFMCIdsoft,TOFMCXcoo,TOFMCtof
     + ,TOFMCedep,ntrcl,Idsoft,Statust,NelemL,NelemR,Sumt,Sigmat,Meant
     + ,RMSt,ErrorMeant,Amplitude,ntrclmc,IdsoftMC,Itra,Left,Center
     + ,Right,ss,xca,xcb,xgl,summc,ntrrh,px,py,statusr,Layer,hitr,ehitr
     + ,sumr,difosum,ntrtr,trstatus,pattern,nhits,phits,FastFitDone
     + ,GeaneFitDone,AdvancedFitDone,Chi2StrLine,Chi2Circle
     + ,CircleRidgidity,Chi2FastFit,Ridgidity,ErrRidgidity,Theta,phi,p0
     + ,gchi2,gridgidity,gerrridgidity,gtheta,gphi,gp0,hchi2,HRidgidity
     + ,HErrRidgidity,htheta,hphi,hp0,fchi2ms,gchi2ms,ridgidityms
     + ,gridgidityms,nmcg,nskip,Particle,coo,dir,momentum,mass,charge
     + ,nctccl,CTCStatus,CTCLayer,ctccoo,ctcercoo,ctcrawsignal,ctcsignal
     + ,ctcesignal,nctcclmc,CTCMCIdsoft,CTCMCXcoo,CTCMCXdir,CTCstep
     + ,ctccharge,ctcbeta,ctcedep,nanti,AntiStatus,AntiSector,AntiEdep
     + ,AntiCoo,AntiErCoo,nantimc,AntiMCIdsoft,AntiMCXcoo,AntiMCtof
     + ,AntiMCedep,nlvl3,LVL3TOFTr,LVL3AntiTr,LVL3TrackerTr,LVL3NTrHits
     + ,LVL3NPat,LVL3Pattern,LVL3Residual,LVL3Time,nlvl1,LVL1Mode
     + ,LVL1TOFPatt,LVL1AntiPatt

*
*
* Variable Declarations
*



*

*
*--   Enter user code here
*
      real ctcf
      integer position(14,14)
      logical cuts(10)      
      integer init,wide
       integer idsofttr(5,200)
      parameter(nchx=384)
      parameter(nchy=642)
      data init/0/
      data ctcf/1./
      if(init.eq.0)then
          trigacc=0.4
        if(trigacc.lt.0.5)then
         open(20,file='pos_0000.dat',form='formatted')
        else
         open(20,file='pos.07.dat',form='formatted')
        endif
       read(20,*)position
       close(20)
        cc=0
        do i=1,14
         do j=1,14
          if(position(j,i).eq.1)cc=cc+1
         enddo
        enddo 
        write(*,*)cc, ' trigger combinations found'
         call hbook1(2,'Nparticles',20,-0.5,19.5,0.)
         call hbook1(11,'Trclusters',200,-0.5,199.5,0.)
         call hbook1(12,'TOFclusters',50,-0.5,49.5,0.)
         call hbook1(15,'TOFclusters',50,-0.5,49.5,0.)
         call hbook1(13,'k.e. before',50,0.15,5.15,0.)
         call hbook1(14,'k.e. before',20,0.1,4.1,0.)
         call hbook1(21,'iptr',20,-0.5,19.5,0.)
         call hbook1(91,'pmom',20,.25,10.25,0.)
         call hbook1(101,'ratio',100,0.,10.,0.)  
         call hbook1(201,'chi2 circle',100,0.,20.,0.)
         call hbook1(202,'chi2 fastfit',100,0.,20.,0.)
         call hbook1(301, 'p1/p2',200,0.,3.,0.)
         call hbook1(302, 'p1/p2',200,-3.,0.,0.)
         call hbook1(402,'chi f ',100,0.,20.,0.)
         call hbook1(403,'chi str',100,0.,100.,0.)
         call hbook1(451,'chi c',100,0.,20.,0.)
         call hbook1(452,'chi f ',100,0.,20.,0.)
         call hbook1(453,'chi str',100,0.,100.,0.)
         call hbook1(454,'chi k',100,0.,100.,0.)
         call hbook1(455,'chi h',100,0.,200.,0.)
         call hbook1(456,'chi h',100,0.,200.,0.)
         call hbook1(461,'theta diff',200,-0.02,0.02,0.)
         call hbook1(462,'beta chi2',200,0.,10.,0.)         
         call hbook1(501,'signal',200,-0.5*ctcf,199.5*ctcf,0.)
         call hbook1(502,'signal',200,-0.5*ctcf,199.5*ctcf,0.)
         call hbook2(503,'signal',100,-0.5*ctcf,99.5*ctcf,
     +   100,-0.5*ctcf,99.5*ctcf,0.)
         call hbook1(601, 'pmass',200,0.,1.,0.)
         call hbook1(603, 'pd',200,-0.5,0.5,0.)
         call hbook1(602, 'beta',200,0.9,1.1,0.)
         call hbook1(902, 'beta',200,0.9,1.1,0.)
         call hbook1(702, 'pmass',200,0.,1.,0.)
         call hbook1(802, 'pmass',200,0.,1.,0.)
         call hbook1(803, 'pd',200,-0.5,0.5,0.)
         call hbook1(703, 'pd',200,-0.5,0.5,0.)
         call hbook1(401,'pmom',20,.25,10.25,0.)
         call hbook1(701,'pmom',20,.25,10.25,0.)
         call hbook1(801,'pmom',100,0.,10.,0.)
         call hbook1(901,'pmom',20,.25,10.25,0.)
         call hbook1(903,'pmom',100,0.,10.,0.)
         call hbook1(1702,' ',100,0.,50.,0.)
         call hbook1(905,'pm',100,0.05,10.05,0.)
         call hbook1(906,'dist 3',100,-0.-0.05,0.05,0.)
         call hbook1(907,'chi dif',200,0.,10.,0.)
         call hbook1(908,'dist 4',100,0.,0.05,0.)
         call hbook1(904, 'pd',200,-0.5,0.5,0.)
         call hbook1(961,'pat',20,-0.5,19.5,0.)
         call hbook1(962,'mom',100,-50,0.,0.)
         call hbook1(963,'mom g',100,0,50.,0.)
         call hbook1(964,'mom/g',100,-2.,0.,0.)
         call hbook1(965,'charge',9,0.5,9.5,0.)
         call hbook1(966,'beta',110,0.,1.1,0.)
         call hbook1(967,'mass',200,0.,5.,0.)
         call hbook1(968,'mass',200,0.5,5.,0.)
         call hbook1(969,'anti',100,0.,10.,0.)
         call hbook1(970,'signal CTC',100,-0.25,49.75,0.)
         call hbook2(971,'cx vx y',100,-100.,100.,100,-100.,100.,0.) 

         call hbook1(1901, 'p1/p2',200,-1.,3.,0.)
         call hbook1(1902 ,'theta dif',200,-0.02,0.02,0.)
         call hbook1(1903,'phi diff',200,-0.05,0.05,0.)
         call hbook1(1904,'dist 1',100,-0.005,0.005,0.)
         call hbook1(1905,'dist 2',100,-0.001,0.001,0.)
         call hbook1(1906,'dist 3',100,-0.-0.05,0.05,0.)
         call hbook1(1907,'chi dif',200,0.,10.,0.)
         call hbook1(1908,'dist 4',100,0.,0.05,0.)
         call hbook1(1961,'pat',20,-0.5,19.5,0.)
         call hbook1(1972,'ke',20,0.125,5.125,0.)
         call hbook1(1962,'mom',200,-20,0.,0.)
         call hbook1(1963,'mom g',200,0,50.,0.)
         call hbook1(1964,'mom/g',200,-2.,0.,0.)
         call hbook1(1965,'charge',9,0.5,9.5,0.)
         call hbook1(1966,'beta',110,0.,1.1,0.)
         call hbook1(1967,'mass',200,0.,5.,0.)
         call hbook1(1973,'mass',200,0.,5.,0.)
         call hbook1(1968,'mass',200,0.6,5.,0.)
         call hbook1(1969,'anti',100,0.,10.,0.)
         call hbook1(1912,'TOFclusters',50,-0.5,49.5,0.)
         call hbook1(1970,'beta chi2',200,0.,10.,0.)         

         call hbook1(11901, 'p1/p2',200,-1.,3.,0.)
         call hbook1(11902 ,'theta dif',200,-0.02,0.02,0.)
         call hbook1(11903,'phi diff',200,-0.05,0.05,0.)
         call hbook1(11904,'dist 1',100,-0.005,0.005,0.)
         call hbook1(11905,'dist 2',100,-0.001,0.001,0.)
         call hbook1(11906,'dist 3',100,-0.-0.05,0.05,0.)
         call hbook1(11907,'chi dif',200,0.,10.,0.)
         call hbook1(11908,'dist 4',100,0.,0.05,0.)
         call hbook1(11961,'pat',20,-0.5,19.5,0.)
         call hbook1(11972,'ke',20,0.125,5.125,0.)
         call hbook1(11962,'mom',200,-20,0.,0.)
         call hbook1(11963,'mom g',200,0,50.,0.)
         call hbook1(11964,'mom/g',200,-2.,0.,0.)
         call hbook1(11965,'charge',9,0.5,9.5,0.)
         call hbook1(11966,'beta',110,0.,1.1,0.)
         call hbook1(11967,'mass',200,0.,5.,0.)
         call hbook1(11973,'mass',200,0.,5.,0.)
         call hbook1(11968,'mass',200,0.6,5.,0.)
         call hbook1(11969,'anti',100,0.,10.,0.)
         call hbook1(11912,'TOFclusters',50,-0.5,49.5,0.)
         call hbook1(11970,'beta chi2',200,0.,10.,0.)         
         call hbook1(12000,'Eff',200,0.001,1.001,0.)
         call hbook1(12001,'Rate',200,0.,4000.,0.)
         call hbook2(12002,'ER',100,0.,4000.,100,0.001,1.001,0.)
         call hbook1(1013,'k.e. before',50,0.15,5.15,0.)
         call hbook1(1014,'k.e. before',20,0.1,4.1,0.)
         call hbook1(11013,'k.e. before',50,0.15,5.15,0.)
         call hbook1(11014,'k.e. before',20,0.1,4.1,0.)
c         write(*,*)' Max gen momentum (GeV/c)'
c         read(*,*)thrm
          thrm=100000000.
        init=1
      endif
      
      ijk=ijk+1
      do i=1,10
         cuts(i)=.false.
      enddo
      nwide=0
      delta=0 
      ndelta=0
      nx=0
      ny=0
      maxcl=50
      do i=1,nctccl
        ctcrawsignal(i)=ctcrawsignal(i)*ctcf
      enddo
      do i=1,ntrcl
       idsofttr(1,i)=mod(idsoft(i),10)
       idsofttr(2,i)=mod(idsoft(i)/10,100)
       ir=mod(idsoft(i)/1000,10)
       if(ir.eq.0)then
        idsofttr(3,i)=0
        idsofttr(4,i)=0
       else if(ir.eq.1)then
        idsofttr(3,i)=0
        idsofttr(4,i)=1
       else if(ir.eq.2)then
        idsofttr(3,i)=1
        idsofttr(4,i)=0
       else 
        idsofttr(3,i)=1
        idsofttr(4,i)=1
       endif
       idsofttr(5,i)=mod(idsoft(i)/10000,1000)
      enddo
      if(momentum(1).lt.thrm)then
      call hf1(2,float(npart),1.)
      rke=(momentum(1)**2+0.88)**0.5-0.938
      if(npart.gt.0)call hf1(13,rke,1.)
      if(npart.gt.0)call hf1(14,rke,1.)
      if(npart.eq.1)then
*
* Trigger
*
      trigger=0
      do i=1,ntof
        if(plane(i).eq.1)then
         do j=1,ntof
          if(plane(j).eq.4)then
                       
            if(position(bar(j),bar(i)).eq.1)trigger=1
          endif
         enddo 
        endif
      enddo       
     
       u=sin(ptheta(1))*cos(pphi(1))
       v=sin(ptheta(1))*sin(pphi(1))
       w=cos(ptheta(1))
       call hf1(11,float(trclusters),1.)
       call hf1(12,float(tofclusters),1.)
c       pmom(1)=momentum(1)
       call hf1(91,pmom(1),1.)
       if(trigger.eq.1)call hf1(15,float(tofclusters),1.)
       cuts(1)=trclusters.lt.50.and.trrechits.lt.200.and.
     +  tracks.lt.20.and.trigger.eq.1
       iptr=ptrackp(1)
       call hf1(21,float(iptr),1.)
       if(cuts(1))then
        r=float(trclusters)/nhits(iptr)
        call hf1(101,r,1.)
        cuts(2)=r.lt.2.5
        if(cuts(2))then
         cuts(3)=chi2circle(iptr).lt.2.5.and.
     +   chi2fastfit(iptr).lt.10.
         call hf1(201,chi2circle(iptr),1.)
         call hf1(202,chi2fastfit(iptr),1.)
         if(cuts(3))then  
            call hf1(462,betachi2(pbetap(1)),1.)
            panti=0
            do i=1,nanti
             panti=panti+antiedep(i)
            enddo
            cuts(4)=panti.lt.0.5.and.tofclusters.lt.5.and.
     +      betachi2(pbetap(1)).lt.5.
*
* Cerenkov cuts
*
                    xx1=0
                    xx2=0
                    do i=1,nctccl
                     if(ctclayer(i).eq.1)xx1=xx1+ctcrawsignal(i)
                     if(ctclayer(i).eq.2)xx2=xx2+ctcrawsignal(i)
                    enddo
            call hf1(501,xx1,1.)
            call hf1(502,xx2,1.)
            call hf2(503,xx1,xx2,1.)
            call hf1(401,pmom(1),1.)
            cuts(5)=xx1.gt.t1.and.xx2.gt.t2
            if(cuts(5))then
             call hf1(601,pmass(1),1.)
             call hf1(602,beta(1),1.)
             cuts(6)=beta(1).gt.0.86
             if(cuts(6))then
               call hf1(701,pmom(1),1.)
               call hf1(702,pmass(1),1.)
                 call hf1(703,probtracker(1,1)-probtracker(2,1),1.)
               cuts(7)=pmom(1).lt.10.
               if(cuts(7))then
                 call hf1(803,probtracker(1,1)-probtracker(2,1),1.)
                call hf1(801,pmom(1),1.)
                call hf1(802,pmass(1),1.)
                cuts(8)=pmass(1).lt.0.3
                if(cuts(8))then
                 call hf1(901,pmom(1),1.)
                 call hf1(903,momentum(1),1.)
                 call hf1(902,beta(1),1.)
                 call hf1(904,probtracker(1,1)-probtracker(2,1),1.)
                 ix=(pmom(1)*10+0.5)
                 
                 do i=100,ix,-1
                     call hf1(905,float(i)/10.,1.)
                  enddo
                endif
               endif
             endif
            endif
         endif 
        endif 
       endif 
      endif
      endif
      anal2po=0
*
 999  END
