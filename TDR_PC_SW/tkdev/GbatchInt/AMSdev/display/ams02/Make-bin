#  $Id: Make-bin,v 1.1.1.1 2007/11/13 09:56:11 zuccon Exp $
##### MACROS #####

ROOTH         = TTree.h TFile.h TH1.h

SRCS          = AMSR_Root.cxx AMSR_Maker.cxx \
		AMSR_Axis.cxx \
		AMSR_GeometrySetter.cxx \
		AMSR_3DCluster.cxx \
		AMSR_ToFCluster.cxx AMSR_ToFClusterReader.cxx \
		AMSR_TrdCluster.cxx AMSR_TrdClusterReader.cxx \
		AMSR_AntiCluster.cxx AMSR_AntiClusterReader.cxx \
		AMSR_TrMCCluster.cxx AMSR_TrMCClusterReader.cxx \
		AMSR_Track.cxx AMSR_TrackReader.cxx \
		AMSR_TrdTrack.cxx AMSR_TrdTrackReader.cxx \
		AMSR_EcalShower.cxx AMSR_EcalShowerReader.cxx \
		AMSR_SiHit.cxx AMSR_SiHitReader.cxx \
		AMSR_Particle.cxx AMSR_ParticleReader.cxx \
		AMSR_MCParticle.cxx AMSR_MCParticleReader.cxx \
                AMSR_Ntuple.cxx \
		AMSR_VirtualDisplay.cxx \
		AMSR_HistBrowser.cxx \
		AMSR_Canvas.cxx \
		AMSR_Display.cxx TGRunEventDialog.cxx \
		TRadioButton.cxx TSwitch.cxx Debugger.cxx  root.cxx
		# MySelectionDialog.cxx \
		# MOTIF_DialogManager.cxx 
		# AMSR_ColorManager.cxx 

FORSRC        = FortranPart.f

HDRS          = TRadioButton.h TSwitch.h \
		AMSR_Axis.h \
		AMSR_3DCluster.h \
		AMSR_Maker.h AMSR_HistBrowser.h AMSR_Root.h \
		AMSR_ToFCluster.h AMSR_ToFClusterReader.h \
		AMSR_TrdCluster.h AMSR_TrdClusterReader.h \
		AMSR_AntiCluster.h AMSR_AntiClusterReader.h \
		AMSR_TrMCCluster.h AMSR_TrMCClusterReader.h \
		AMSR_Track.h AMSR_TrackReader.h \
		AMSR_TrdTrack.h AMSR_TrdTrackReader.h \
		AMSR_EcalShower.h AMSR_EcalShowerReader.h \
		AMSR_SiHit.h AMSR_SiHitReader.h \
		AMSR_Particle.h AMSR_ParticleReader.h \
		AMSR_MCParticle.h AMSR_MCParticleReader.h \
                AMSR_Ntuple.h  \
		AMSR_VirtualDisplay.h \
		Debugger.h \
		AMSR_Canvas.h \
		AMSR_GeometrySetter.h \
		AMSR_Display.h TGRunEventDialog.h \
                EventRoot02.h TrTrackRoot02.h TRDTrackRoot.h\
                AMSEventHeaderRoot.h MCEventGRoot02.h TRDClusterRoot.h\
                LinkDef.h                
		# MySelectionDialog.h \
		# AMSR_ColorManager.h

HDRS2        =  AMSR_NtupleCommons.h AMSR_Types.h cfortran.h hbook.h

SRCSG         = # AMSR_Display.cxx 		# AMSR_Fruit.cxx

HDRSG         = # AMSR_Display.h GLinkDef.h

		# AMSR_Fruit.h
		# ATLFDisplay.h ATLFParticle.h ATLFFruit.h GLinkDef.h 
                

DICT          = AMSR_Cint.cxx
DICTH         = $(DICT:.cxx=.h)
DICTO         = $(DICT:%.cxx=$(OBJDIR)/%.o)

DICTG         = # AMSR_gCint.cxx
DICTGH        = # $(DICTG:.cxx=.h)
DICTGO        = # $(DICTG:%.cxx=$(OBJDIR)/%.o)

FORO          = $(FORSRC:%.f=$(OBJDIR)/%.o)

MAIN          = main.cxx
MAINO         = $(MAIN:%.cxx=$(OBJDIR)/%.o)

MAINRINT      = mainRint.cxx
MAINRINTO     = $(MAINRINT:%.cxx=$(OBJDIR)/%.o)

MAINC          = mainc.cxx
MAINOC         = $(MAINC:%.cxx=$(OBJDIR)/%.o)

MAINV          = mainv.cxx
MAINOV         = $(MAINV:%.cxx=$(OBJDIR)/%.o)

OBJS          = $(SRCS:%.cxx=$(OBJDIR)/%.o) $(DICTO) $(FORO)

OBJSG         = # $(SRCSG:%.cxx=$(OBJDIR)/%.o) $(DICTGO)

ALLDICT       = $(DICT) $(DICTH) $(DICTG) $(DICTGH)
# ALLSRCS       = $(SRCS) $(SRCSG) $(HDRS) $(HDRSG) $(ALLDICT)
ALLSRCS       = $(SRCS) $(SRCSG) $(FORSRC) $(HDRS) $(HDRS2) $(HDRSG) \
                $(MAIN) $(MAINRINT) $(MAINC) $(MAINV)
ALLOBJS       = $(OBJS) $(OBJSG) $(MAINO) $(MAINRINTO) $(MAINOC) $(MAINOV)


#####################################
	###                               ###
###  physical names for TARGETS   ###
###                               ###
#####################################
AMSR_STATICLIB  = $(OBJDIR)/libAMS.a

AMSR_SHAREDLIB  = $(OBJDIR)/libAMS.so

AMSR_TAR        = display
AMSR_PRG        = $(OBJDIR)/amsed
AMSR_RINT       = $(OBJDIR)/amsRint
AMSR_PRGC       = $(OBJDIR)/amsedc
AMSR_PRGV       = $(OBJDIR)/amsedv


##################################
###                            ###
###  dependencies for TARGETS  ###
###                            ###
##################################
.PHONY :     standalone interactive realtime projector depend dist clean
.PHONY :     touch_depend

interactive: $(AMSR_RINT)

standalone:  $(AMSR_PRG)

realtime:    $(AMSR_PRGC)

projector:   $(AMSR_PRGV)


###########################
###                     ###
###  rules for TARGETS  ###
###                     ###
###########################
## --First rule is to check if the platform is supported

$(AMSR_SHAREDLIB):  $(OBJS)
	rm -f $@
	-$(SHLD) -o $@ $^ $(ADDLIBS)
	chmod 555 $@
	@echo "$@ done with $^ linked in"

$(AMSR_STATICLIB):  $(OBJS)
	rm -f $@
	-$(ARLD)  $@ $^
	chmod 555 $@
	@echo "$@ done with $^ linked in"

$(AMSR_PRG):	$(MAINO) $(AMSR_STATICLIB)
		$(LD) $(LDFLAGS) -o $@ $^ $(GLIBS) $(FORLIBS)

$(AMSR_RINT):   $(MAINRINTO) $(AMSR_SHAREDLIB)
		$(LD) $(LDFLAGS) -o $@ $^ $(GLIBS)

$(AMSR_PRGC):	$(MAINOC) $(AMSR_SHAREDLIB)
		$(LD) $(LDFLAGS) -o $@ $^ $(GLIBS)

$(AMSR_PRGV):	$(MAINOV) $(AMSR_SHAREDLIB)
		$(LD) $(LDFLAGS) -o $@ $^ $(GLIBS)


$(DICT):        $(HDRS)
		@echo "Generating dictionary ..."
		$(ROOTSYS)/bin/rootcint -f $@ -c $(ROOTH) $^

$(DICTG):       $(HDRSG)
		@echo "Generating display dictionary ..."
		rootcint -f $@ -c $^

$(DICTO):       $(DICT)
		$(CXX) $(NOOPT) $(CXXFLAGS) -c $< -o $@

$(DICTGO):      $(DICTG)
		$(CXX) $(NOOPT) $(CXXFLAGS) -c $< -o $@

AddPrefix   =    sed -e '/:/s%\(.*:\)%$(OBJDIR)/\1%'
depend:         $(OBJDIR)/Make-depend
touch_depend:
		touch $(OBJDIR)/Make-depend

$(OBJDIR)/Make-depend:    $(SRCS) $(SRCSG) $(MAIN) $(MAINRINT)
		@test -e $(OS) || mkdir $(OS)
		@test -e $(OBJDIR) || mkdir $(OBJDIR)
		$(GCC) -E -MM $(INCLUDES) $^ > $@.DELETE
		@cat $@.DELETE | $(AddPrefix) > $@; rm -f $@.DELETE

dist:
		rm -f $(AMSR_TAR).tar.gz ;
		tar cvf $(AMSR_TAR).tar $(ALLSRCS) \
                        *.C Make* 0* ams_group.root*
		gzip $(AMSR_TAR).tar

clean:
		@rm -f $(ALLOBJS) $(ALLDICT)

#================================================================C
#
#--use "include" as to a check for the support-platforms :
#
#   force to print some message if the platform is not supported,
#   nothing to do if it is supported.
#
#================================================================C
CHECK_SUPPORT = ""
$(CHECK_SUPPORT):
 ifeq "$(FOUND)" ""
	@echo "Sorry! platform of $(OS) not yet supported"
	@echo " current only supported are $(SUPPORTED)"
	@false
 else
#	@echo "your platform of $(FOUND) is supported"
	@true
 endif

ifeq "$(FOUND)" ""
 include $(CHECK_SUPPORT)
endif
