#  $Id: trigger1.doc,v 1.1.1.1 2007/11/13 09:56:11 zuccon Exp $
class TriggerLVL1: public AMSlink{
protected:
 integer _TriggerMode;
 integer _tofflag;   // =1/2/3 -> "z>=1"/"z>1"/"z>2"(+10 if it was 4-layer trigger) 
 integer _tofpatt[SCLRS];// TOF:  triggered paddles/layer pattern
 integer _antipatt;  // ANTI: triggered sectors pattern(bits 1-16->AND, bits 17-32->OR)
 void _copyEl(){}
 void _printEl(ostream & stream){ stream << " TriggerMode " << _TriggerMode<<endl;}
 void _writeEl();
public:
 TriggerLVL1(integer TriggerMode, integer tofflag, integer tofpatt[],
             integer antipatt):_TriggerMode(TriggerMode),_tofflag(tofflag){
   for(int i=0;i<SCLRS;i++)_tofpatt[i]=tofpatt[i];
   _antipatt=antipatt;
 }
 integer getmode () const {return _TriggerMode;}
 integer gettoflg() {return _tofflag;}
 integer checktofpatt(integer tofc, integer paddle);
 integer checkantipatt(integer counter){return _antipatt & (1<<counter);}
 static void build();
};
//-------------------------------------------------------
 The object of this class is created if :
   Number of TOF-layers in coincidence >= LVL1FFKEY.ntof;
   Number of triggered ANTI-sectors <= LVL1FFKEY.nanti;
     This is mode 1.
//-------------------------------------------------------
