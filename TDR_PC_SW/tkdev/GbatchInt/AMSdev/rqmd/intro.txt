c***************************************************************************
   What is new in RQMD 2.4 ?

 + Version  RQMD 2.4 is basically a technical update of version 2.3 to
   make the code executable for high-mass, small-impact parameter collisions
   at collider energies, in particular central Au(100GeV) on  Au(100GeV)
   collisions. Experiments for this system are due for 1999 at RHIC,
   BNL. 

 + Many arrays need to be expanded in order to accomodate for the huge     
   particle multiplicities. I mention 2 parameters which are set in
   partblk7.f, because users may want to change their values:          
   ntotma, numema. (The default setting eats considerable memory of the
   CPU at run time.)
   Roughly speaking, ntotma is related to particle multiplicity N and
   numema to number of collisions (N^2).

 + As usual I have tried to correct for bugs which become
   apparent from time to time.

                     Heinz Sorge                31/1/98
c                                                                       
c***************************************************************************
c    RQMD  for beginners
c
c      Reference: H. Sorge,   Phys.\   Rev.\ C52  (1995) 3291.  
c
c...Initial configuration of rqmd generated events:
c        projectile  (x,y,z)=(b/2,0,infinity)
c        target      (x,y,z)=(-b/2,0,-infinity)
c        The projectile goes downward, the target upward.
c        rqmd calculates events in the equal-speed-system
c        (proj. and target have opposite velocities in beam direction.)
c        Important consequences:
c        + z-momentum has to be reflected to get the usual precription
c          that projectile has larger rapidity than target.
c        + If a trigger breaks phi-symmetry rqmd events have to be
c          rotated randomly around the z-axis. Note that
c          px=p1 is the transverse momentum in the reaction plane,
c          py=p2 the tr. momentum perpendicular to the reaction plane.
c
c...short description of input and output files
c   which are used in rqmd:
c         general remark:
c         all machine-dependent parts of rqmd are put together
c         into a file dubbed  machin.f/for/ftn/fort.
c         every user has to take care of a proper connection
c         to input/output units, initialization of cpu timers,
c         random number generator etc.
c
c...input
c           unit 5
c.    The input for generating events by rqmd is  set by
c     a namelist 'input' which is connected to unit 5.
c     An example follows:
 $input 
           n1=32
          iz1=16
          n2=208
          iz2=82
          nruns=10
          elgev=200.0
          b=-3.0            
c...optional
          ref='cld'
          switch(16)=.true.
          iseed=505   
          .
          .
          .
 $end         
c  n1/iz1   mass and charge number of projectile
c  n2/iz2   mass and charge number of target     
c
c  nruns    no. of events to be generated.
c
c  elgev    kinetic energy of projectile in target rest system (lab).
c           (note: with ref='cld' elgev changes meaning. then
c            elgev=energy  of proj. or target in collider.)
c           elgev is given  in units of gev.
c
c           b  impact  parameter (in fm).
c              fixed number .ge.0.0  -- fixed impact parameter
c           b= fixed negative number -- stochastic sample of impact
c                                         parameters between (0,-b).
c              -100.0                -- minimum  bias
c                                       (including elastic collisions)
c
c.   optional input
c           switch(?)=t/f            -- the meaning of the switches
c                                       is explained in the header
c                                       of the program       
c           iseed=xxxx               -- generation of events with
c                                       fixed random number initialization.
c                                       (otherwise events are randomly
c                                        initialized. users have to take
c                                        care of proper initialization
c                                        procedure in machin.xxx.)
c
c... important switches:
c       13        rope formation yes/no
c       23        without/with potentials (mean fields)
c                 + it is suggested that in the few GeV energy region
c                   (up to perhaps 20) potentials are included in the
c                   simulation of AA collisions
c     
c      (note rescattering is switched on/off with ida(15) in block data
c       rqmdat.)
c
c
c...output
c
c           unit 8
c      unit 8  contains the log file of rqmd.
c      it describes the input specification thereby checking
c      the internal consistency.
c      rqmd closes unit 8 either with a timer report or
c      with the message that the subr. errex has been called.
c      users can ignore all warnings on unit 8, but should take
c      notice of abortion with errex  (or with floating errors
c      etc.). In the latter cases a message stating the character of
c      the error message to the author  
c      (sorge@th.physik.uni-frankfurt.de) is
c      appreciated.
c
c           unit 9
c.     unit 9 contains final phase space info about all particles
c      generated  per event.
c...the following FORTRAN statements from rqmd 
c   are relevant for
c   output on unit 9.
      namelist/output/  n1,iz1,n2,iz2,ref,elgev,
     a                   b,iyy
      write(9,output)
       write(9,905) npion,npitru,nspnuc,ngamma
       write(9,906)  ncollt,idcntd,idcntn,idcntr,iabspi
             write(9,1907)  ityp(l),npidec(l),
     &                   (x(i,l),i=0,3),
     &                   (p(i,l),i=0,3),em(l),decay(l),
     &                    nclcnt(issn(l)),lastcl(l)      
c  npion  -- number of particles in event list - in addition to the
c            original particle number (n1+n2).
c  x      -- particle position at freeze-out (4-vector)
c            note: in case of weak decays the decay point is artificial
c                  because the decay had been enforced (switch(16)=f).
c                  such 'wrong' points are tagged via lastcl (see below).
c  p      -- particle momentum  (4-vector)
c  em     -- particle mass                         
c  ityp/npidec  -- specification of particle identity.
c                  (rqmd contains a subroutine converting 
c                   the rqmd particle code into the LUND code 
c                   -- JETSET 6.2 -- and
c                   vice versa: transl)
c                  The LUND particle code is described in:
                   CPC 39 (1986)347.
c**************************************************************************
c..short transl description:                                              *
c       transl translates the particle identity code of rqmd into the     *
c       lund code (iref=-1) or vice versa (iref= 1).                      *     
c                subroutine transl(iref,itp,npid,kl2)                     *
c                                                                         *
c           input       iref=-1                                           *
c                       input: itp,npid      (rqmd)                       *
c                       output: kl2          (lund)                       *
c                                                                         *
c           input       iref= 1                                           *
c                       input: kl2                                        *
c                       output: itp,npid                                  *
c                                                                         *
c...end of transl description.                                            *
c**************************************************************************
c
c                                                                               
c  lastcl             meaning in output on unit 9   
c                     if rqmd events are generated with ida(38)=3,
c                     the default value:
C                     CHARACTER OF FINAL INTERACTION:                           
C                     collision                            1 
C                     string                               2          
C                     high mass resonance decay            3   
C                     (but not Delta, vector mesons -- rho, etc.. --)
C                     rope                                 4   
C                     Delta decay                          7  
C                     JETSET code of                       else,ne 0 
C                     decayed mother hadron     
C                     weak decay or ingoing spectator      -1 (0)
c                                                                               
c decay     decay time of a hadron, =1.e+35 for hadrons which
c           are stable under strong interactions
c                                                                               
c nclcnt = no. of collisions, experienced by hadron                             
c          but:                                       
c          makes sense only for hadrons with (nearly) conserved   
c          quantum number like baryon number, strangeness.       
c                                                                               
c
c output on unit 14  
   unit 14 states all error messages (from subroutine errex).
c output on unit 15
   protocol of all collisions and decays during the dynamical 
   evolution generated by rqmd.
c output on units 6,11,12,13  is uninteresting for most users.

 Note: the RQMD events are calculated by default
       in the equal-speed-system of projectile and target.
       The user should not change this normally because of
       numerical precision problems if the calculation is
       done in the lab frame. However, very often the
       final particle momenta are needed in this frame
       to compare with experimental data. 
       The following piece of FORTRAN provides the Lorentz 
       transformation into the laboratory system:
   
      ELAB=ELGEV                                                              
      EMPROJ=EMNUC                                                            
      PPROJ=SQRT(ELAB*(2.*EMPROJ+ELAB))                                         
      S2=(ELAB+EMNUC+EMPROJ)**2-PPROJ**2                                        
      AVIRT= 0.5*(S2- EMNUC*EMNUC-EMPROJ*EMPROJ)/EMNUC/EMPROJ                   
      IF(AVIRT.LT.1.) THEN                                                      
         WRITE(6,*) 'NUMERICAL ERROR AVIRT.LT.1.   AVIRT=',AVIRT                
         STOP                                                                   
      END IF                                                                    
      BETANN=SQRT( (AVIRT-1.)/(AVIRT+1.))                                       
      GAMNN= 1./SQRT(1.-BETANN*BETANN)                                          
            GAMTRA= GAMNN                                                       
            BETTRA=-BETANN                                                      
      NTOTAL=N1+N2+NPION
      DO 2001 L=1,NTOTAL                                                        
C ... TRANSFORM MOMENTA TO REFNEW SYSTEM                                        
       P0= GAMTRA*(P(0,L)+ BETTRA*P(3,L) )                                    
       P(3,L)= GAMTRA*(P(3,L)+ BETTRA*P(0,L) )                                
       P(0,L)=P0                                                              
C... CONVERT PROJECTILE DIRECTION (Y(PROJ.) > 0 ).                              
       P(3,L)=-P(3,L)                                                       
 2001 CONTINUE                                                                  
      END                                                                       
   
